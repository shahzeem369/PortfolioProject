{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/shahzeem369/PortfolioProject/blob/main/Machine%20Learning%20Model%20Prediction\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "FnBJWtGGVpU_"
      },
      "outputs": [],
      "source": [
        "\n",
        "import pandas as pd\n",
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=pd.read_csv(\"/content/most-polluted-countries.csv\")\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 582
        },
        "id": "gbc4i_Vtab1N",
        "outputId": "ee6c6f9b-a332-4046-8688-61b91c5e4c1b"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    pollution_2023  pollution_growth_Rate   country_name  ccn3 country_region  \\\n",
              "0       1428627663                0.00808          India   356           Asia   \n",
              "1       1425671352               -0.00015          China   156           Asia   \n",
              "2        339996563                0.00505  United States   840  North America   \n",
              "3        277534122                0.00738      Indonesia   360           Asia   \n",
              "4        240485658                0.01976       Pakistan   586           Asia   \n",
              "..             ...                    ...            ...   ...            ...   \n",
              "91          704149                0.01292          Macau   446           Asia   \n",
              "92          654768                0.01107     Luxembourg   442         Europe   \n",
              "93          535064                0.00333          Malta   470         Europe   \n",
              "94          412623                0.00644        Bahamas    44  North America   \n",
              "95          375318                0.00649        Iceland   352         Europe   \n",
              "\n",
              "    united_nation_Member  country_land_Area_in_Km  pollution_density_in_km  \\\n",
              "0                   True                2973190.0                 480.5033   \n",
              "1                   True                9424702.9                 151.2696   \n",
              "2                   True                9147420.0                  37.1686   \n",
              "3                   True                1877519.0                 147.8196   \n",
              "4                   True                 770880.0                 311.9625   \n",
              "..                   ...                      ...                      ...   \n",
              "91                 False                     32.9               21402.7052   \n",
              "92                  True                   2574.5                 254.3282   \n",
              "93                  True                    320.0                1672.0750   \n",
              "94                  True                  10010.0                  41.2211   \n",
              "95                  True                 100830.0                   3.7223   \n",
              "\n",
              "    pollution_density_per_Mile  \\\n",
              "0                    1244.5036   \n",
              "1                     391.7884   \n",
              "2                      96.2666   \n",
              "3                     382.8528   \n",
              "4                     807.9829   \n",
              "..                         ...   \n",
              "91                  55433.0064   \n",
              "92                    658.7101   \n",
              "93                   4330.6743   \n",
              "94                    106.7626   \n",
              "95                      9.6407   \n",
              "\n",
              "                                        share_borders  pollution_Rank  \\\n",
              "0              AFG, BGD, BTN, MMR, CHN, NPL, PAK, LKA               1   \n",
              "1   AFG, BTN, MMR, HKG, IND, KAZ, PRK, KGZ, LAO, M...               2   \n",
              "2                                            CAN, MEX               3   \n",
              "3                                       TLS, MYS, PNG               4   \n",
              "4                                  AFG, CHN, IND, IRN               5   \n",
              "..                                                ...             ...   \n",
              "91                                                CHN             167   \n",
              "92                                      BEL, FRA, DEU             168   \n",
              "93                                                NaN             173   \n",
              "94                                                NaN             176   \n",
              "95                                                NaN             179   \n",
              "\n",
              "    mostPollutedCountries_particlePollution  \n",
              "0                                     58.08  \n",
              "1                                     39.12  \n",
              "2                                      9.04  \n",
              "3                                     51.71  \n",
              "4                                     65.81  \n",
              "..                                      ...  \n",
              "91                                    23.50  \n",
              "92                                     9.60  \n",
              "93                                     9.40  \n",
              "94                                     3.30  \n",
              "95                                     5.55  \n",
              "\n",
              "[96 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d6fcf779-0e40-476a-8c11-4e5c6e106b0d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pollution_2023</th>\n",
              "      <th>pollution_growth_Rate</th>\n",
              "      <th>country_name</th>\n",
              "      <th>ccn3</th>\n",
              "      <th>country_region</th>\n",
              "      <th>united_nation_Member</th>\n",
              "      <th>country_land_Area_in_Km</th>\n",
              "      <th>pollution_density_in_km</th>\n",
              "      <th>pollution_density_per_Mile</th>\n",
              "      <th>share_borders</th>\n",
              "      <th>pollution_Rank</th>\n",
              "      <th>mostPollutedCountries_particlePollution</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1428627663</td>\n",
              "      <td>0.00808</td>\n",
              "      <td>India</td>\n",
              "      <td>356</td>\n",
              "      <td>Asia</td>\n",
              "      <td>True</td>\n",
              "      <td>2973190.0</td>\n",
              "      <td>480.5033</td>\n",
              "      <td>1244.5036</td>\n",
              "      <td>AFG, BGD, BTN, MMR, CHN, NPL, PAK, LKA</td>\n",
              "      <td>1</td>\n",
              "      <td>58.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1425671352</td>\n",
              "      <td>-0.00015</td>\n",
              "      <td>China</td>\n",
              "      <td>156</td>\n",
              "      <td>Asia</td>\n",
              "      <td>True</td>\n",
              "      <td>9424702.9</td>\n",
              "      <td>151.2696</td>\n",
              "      <td>391.7884</td>\n",
              "      <td>AFG, BTN, MMR, HKG, IND, KAZ, PRK, KGZ, LAO, M...</td>\n",
              "      <td>2</td>\n",
              "      <td>39.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>339996563</td>\n",
              "      <td>0.00505</td>\n",
              "      <td>United States</td>\n",
              "      <td>840</td>\n",
              "      <td>North America</td>\n",
              "      <td>True</td>\n",
              "      <td>9147420.0</td>\n",
              "      <td>37.1686</td>\n",
              "      <td>96.2666</td>\n",
              "      <td>CAN, MEX</td>\n",
              "      <td>3</td>\n",
              "      <td>9.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>277534122</td>\n",
              "      <td>0.00738</td>\n",
              "      <td>Indonesia</td>\n",
              "      <td>360</td>\n",
              "      <td>Asia</td>\n",
              "      <td>True</td>\n",
              "      <td>1877519.0</td>\n",
              "      <td>147.8196</td>\n",
              "      <td>382.8528</td>\n",
              "      <td>TLS, MYS, PNG</td>\n",
              "      <td>4</td>\n",
              "      <td>51.71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>240485658</td>\n",
              "      <td>0.01976</td>\n",
              "      <td>Pakistan</td>\n",
              "      <td>586</td>\n",
              "      <td>Asia</td>\n",
              "      <td>True</td>\n",
              "      <td>770880.0</td>\n",
              "      <td>311.9625</td>\n",
              "      <td>807.9829</td>\n",
              "      <td>AFG, CHN, IND, IRN</td>\n",
              "      <td>5</td>\n",
              "      <td>65.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>704149</td>\n",
              "      <td>0.01292</td>\n",
              "      <td>Macau</td>\n",
              "      <td>446</td>\n",
              "      <td>Asia</td>\n",
              "      <td>False</td>\n",
              "      <td>32.9</td>\n",
              "      <td>21402.7052</td>\n",
              "      <td>55433.0064</td>\n",
              "      <td>CHN</td>\n",
              "      <td>167</td>\n",
              "      <td>23.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>654768</td>\n",
              "      <td>0.01107</td>\n",
              "      <td>Luxembourg</td>\n",
              "      <td>442</td>\n",
              "      <td>Europe</td>\n",
              "      <td>True</td>\n",
              "      <td>2574.5</td>\n",
              "      <td>254.3282</td>\n",
              "      <td>658.7101</td>\n",
              "      <td>BEL, FRA, DEU</td>\n",
              "      <td>168</td>\n",
              "      <td>9.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>535064</td>\n",
              "      <td>0.00333</td>\n",
              "      <td>Malta</td>\n",
              "      <td>470</td>\n",
              "      <td>Europe</td>\n",
              "      <td>True</td>\n",
              "      <td>320.0</td>\n",
              "      <td>1672.0750</td>\n",
              "      <td>4330.6743</td>\n",
              "      <td>NaN</td>\n",
              "      <td>173</td>\n",
              "      <td>9.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>412623</td>\n",
              "      <td>0.00644</td>\n",
              "      <td>Bahamas</td>\n",
              "      <td>44</td>\n",
              "      <td>North America</td>\n",
              "      <td>True</td>\n",
              "      <td>10010.0</td>\n",
              "      <td>41.2211</td>\n",
              "      <td>106.7626</td>\n",
              "      <td>NaN</td>\n",
              "      <td>176</td>\n",
              "      <td>3.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>375318</td>\n",
              "      <td>0.00649</td>\n",
              "      <td>Iceland</td>\n",
              "      <td>352</td>\n",
              "      <td>Europe</td>\n",
              "      <td>True</td>\n",
              "      <td>100830.0</td>\n",
              "      <td>3.7223</td>\n",
              "      <td>9.6407</td>\n",
              "      <td>NaN</td>\n",
              "      <td>179</td>\n",
              "      <td>5.55</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>96 rows × 12 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d6fcf779-0e40-476a-8c11-4e5c6e106b0d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d6fcf779-0e40-476a-8c11-4e5c6e106b0d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d6fcf779-0e40-476a-8c11-4e5c6e106b0d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-1342f038-f694-45bc-b034-522a68111363\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1342f038-f694-45bc-b034-522a68111363')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-1342f038-f694-45bc-b034-522a68111363 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_34ec6115-c3a6-464e-90fa-fd7026bee016\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_34ec6115-c3a6-464e-90fa-fd7026bee016 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 96,\n  \"fields\": [\n    {\n      \"column\": \"pollution_2023\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 208337614,\n        \"min\": 375318,\n        \"max\": 1428627663,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          3728282,\n          5056935,\n          5545475\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.013353505512138725,\n        \"min\": -0.07448,\n        \"max\": 0.0498,\n        \"num_unique_values\": 95,\n        \"samples\": [\n          0.01579,\n          0.00869,\n          0.02689\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 96,\n        \"samples\": [\n          \"Georgia\",\n          \"Ireland\",\n          \"Finland\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ccn3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 251,\n        \"min\": 4,\n        \"max\": 860,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          268,\n          372,\n          246\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Asia\",\n          \"North America\",\n          \"Oceania\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"united_nation_Member\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_land_Area_in_Km\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2518834.9560663244,\n        \"min\": 32.9,\n        \"max\": 16376870.0,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          69490.0,\n          68890.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_density_in_km\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2428.2978284437586,\n        \"min\": 2.2133,\n        \"max\": 21402.7052,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          53.6521,\n          73.4059\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_density_per_Mile\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6289.291375632943,\n        \"min\": 5.7323,\n        \"max\": 55433.0064,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          138.9588,\n          190.1214\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"share_borders\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 83,\n        \"samples\": [\n          \"IRN, PAK, TKM, UZB, TJK, CHN\",\n          \"AFG, BGD, BTN, MMR, CHN, NPL, PAK, LKA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 51,\n        \"min\": 1,\n        \"max\": 179,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          132,\n          125\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mostPollutedCountries_particlePollution\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.478306021878316,\n        \"min\": 3.3,\n        \"max\": 83.3,\n        \"num_unique_values\": 93,\n        \"samples\": [\n          19.36,\n          21.56\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 365
        },
        "id": "sCc9vQWwq5LH",
        "outputId": "d5a6cc4e-2d46-4cec-dc67-fb131f5072c6"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   pollution_2023  pollution_growth_Rate   country_name  ccn3 country_region  \\\n",
              "0      1428627663                0.00808          India   356           Asia   \n",
              "1      1425671352               -0.00015          China   156           Asia   \n",
              "2       339996563                0.00505  United States   840  North America   \n",
              "3       277534122                0.00738      Indonesia   360           Asia   \n",
              "4       240485658                0.01976       Pakistan   586           Asia   \n",
              "\n",
              "   united_nation_Member  country_land_Area_in_Km  pollution_density_in_km  \\\n",
              "0                  True                2973190.0                 480.5033   \n",
              "1                  True                9424702.9                 151.2696   \n",
              "2                  True                9147420.0                  37.1686   \n",
              "3                  True                1877519.0                 147.8196   \n",
              "4                  True                 770880.0                 311.9625   \n",
              "\n",
              "   pollution_density_per_Mile  \\\n",
              "0                   1244.5036   \n",
              "1                    391.7884   \n",
              "2                     96.2666   \n",
              "3                    382.8528   \n",
              "4                    807.9829   \n",
              "\n",
              "                                       share_borders  pollution_Rank  \\\n",
              "0             AFG, BGD, BTN, MMR, CHN, NPL, PAK, LKA               1   \n",
              "1  AFG, BTN, MMR, HKG, IND, KAZ, PRK, KGZ, LAO, M...               2   \n",
              "2                                           CAN, MEX               3   \n",
              "3                                      TLS, MYS, PNG               4   \n",
              "4                                 AFG, CHN, IND, IRN               5   \n",
              "\n",
              "   mostPollutedCountries_particlePollution  \n",
              "0                                    58.08  \n",
              "1                                    39.12  \n",
              "2                                     9.04  \n",
              "3                                    51.71  \n",
              "4                                    65.81  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-018b39a0-7c23-4754-8fc0-ca3a5fcc0056\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pollution_2023</th>\n",
              "      <th>pollution_growth_Rate</th>\n",
              "      <th>country_name</th>\n",
              "      <th>ccn3</th>\n",
              "      <th>country_region</th>\n",
              "      <th>united_nation_Member</th>\n",
              "      <th>country_land_Area_in_Km</th>\n",
              "      <th>pollution_density_in_km</th>\n",
              "      <th>pollution_density_per_Mile</th>\n",
              "      <th>share_borders</th>\n",
              "      <th>pollution_Rank</th>\n",
              "      <th>mostPollutedCountries_particlePollution</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1428627663</td>\n",
              "      <td>0.00808</td>\n",
              "      <td>India</td>\n",
              "      <td>356</td>\n",
              "      <td>Asia</td>\n",
              "      <td>True</td>\n",
              "      <td>2973190.0</td>\n",
              "      <td>480.5033</td>\n",
              "      <td>1244.5036</td>\n",
              "      <td>AFG, BGD, BTN, MMR, CHN, NPL, PAK, LKA</td>\n",
              "      <td>1</td>\n",
              "      <td>58.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1425671352</td>\n",
              "      <td>-0.00015</td>\n",
              "      <td>China</td>\n",
              "      <td>156</td>\n",
              "      <td>Asia</td>\n",
              "      <td>True</td>\n",
              "      <td>9424702.9</td>\n",
              "      <td>151.2696</td>\n",
              "      <td>391.7884</td>\n",
              "      <td>AFG, BTN, MMR, HKG, IND, KAZ, PRK, KGZ, LAO, M...</td>\n",
              "      <td>2</td>\n",
              "      <td>39.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>339996563</td>\n",
              "      <td>0.00505</td>\n",
              "      <td>United States</td>\n",
              "      <td>840</td>\n",
              "      <td>North America</td>\n",
              "      <td>True</td>\n",
              "      <td>9147420.0</td>\n",
              "      <td>37.1686</td>\n",
              "      <td>96.2666</td>\n",
              "      <td>CAN, MEX</td>\n",
              "      <td>3</td>\n",
              "      <td>9.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>277534122</td>\n",
              "      <td>0.00738</td>\n",
              "      <td>Indonesia</td>\n",
              "      <td>360</td>\n",
              "      <td>Asia</td>\n",
              "      <td>True</td>\n",
              "      <td>1877519.0</td>\n",
              "      <td>147.8196</td>\n",
              "      <td>382.8528</td>\n",
              "      <td>TLS, MYS, PNG</td>\n",
              "      <td>4</td>\n",
              "      <td>51.71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>240485658</td>\n",
              "      <td>0.01976</td>\n",
              "      <td>Pakistan</td>\n",
              "      <td>586</td>\n",
              "      <td>Asia</td>\n",
              "      <td>True</td>\n",
              "      <td>770880.0</td>\n",
              "      <td>311.9625</td>\n",
              "      <td>807.9829</td>\n",
              "      <td>AFG, CHN, IND, IRN</td>\n",
              "      <td>5</td>\n",
              "      <td>65.81</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-018b39a0-7c23-4754-8fc0-ca3a5fcc0056')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-018b39a0-7c23-4754-8fc0-ca3a5fcc0056 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-018b39a0-7c23-4754-8fc0-ca3a5fcc0056');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a2482ff3-90ca-4d3d-9b5d-d2f991b610e8\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a2482ff3-90ca-4d3d-9b5d-d2f991b610e8')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a2482ff3-90ca-4d3d-9b5d-d2f991b610e8 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 96,\n  \"fields\": [\n    {\n      \"column\": \"pollution_2023\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 208337614,\n        \"min\": 375318,\n        \"max\": 1428627663,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          3728282,\n          5056935,\n          5545475\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.013353505512138725,\n        \"min\": -0.07448,\n        \"max\": 0.0498,\n        \"num_unique_values\": 95,\n        \"samples\": [\n          0.01579,\n          0.00869,\n          0.02689\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 96,\n        \"samples\": [\n          \"Georgia\",\n          \"Ireland\",\n          \"Finland\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ccn3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 251,\n        \"min\": 4,\n        \"max\": 860,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          268,\n          372,\n          246\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Asia\",\n          \"North America\",\n          \"Oceania\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"united_nation_Member\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_land_Area_in_Km\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2518834.9560663244,\n        \"min\": 32.9,\n        \"max\": 16376870.0,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          69490.0,\n          68890.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_density_in_km\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2428.2978284437586,\n        \"min\": 2.2133,\n        \"max\": 21402.7052,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          53.6521,\n          73.4059\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_density_per_Mile\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6289.291375632943,\n        \"min\": 5.7323,\n        \"max\": 55433.0064,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          138.9588,\n          190.1214\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"share_borders\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 83,\n        \"samples\": [\n          \"IRN, PAK, TKM, UZB, TJK, CHN\",\n          \"AFG, BGD, BTN, MMR, CHN, NPL, PAK, LKA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 51,\n        \"min\": 1,\n        \"max\": 179,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          132,\n          125\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mostPollutedCountries_particlePollution\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.478306021878316,\n        \"min\": 3.3,\n        \"max\": 83.3,\n        \"num_unique_values\": 93,\n        \"samples\": [\n          19.36,\n          21.56\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "Gii_F8kPq7kQ",
        "outputId": "1e1a0532-9c3d-45bd-e81e-59129ef1d660"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    pollution_2023  pollution_growth_Rate country_name  ccn3 country_region  \\\n",
              "91          704149                0.01292        Macau   446           Asia   \n",
              "92          654768                0.01107   Luxembourg   442         Europe   \n",
              "93          535064                0.00333        Malta   470         Europe   \n",
              "94          412623                0.00644      Bahamas    44  North America   \n",
              "95          375318                0.00649      Iceland   352         Europe   \n",
              "\n",
              "    united_nation_Member  country_land_Area_in_Km  pollution_density_in_km  \\\n",
              "91                 False                     32.9               21402.7052   \n",
              "92                  True                   2574.5                 254.3282   \n",
              "93                  True                    320.0                1672.0750   \n",
              "94                  True                  10010.0                  41.2211   \n",
              "95                  True                 100830.0                   3.7223   \n",
              "\n",
              "    pollution_density_per_Mile  share_borders  pollution_Rank  \\\n",
              "91                  55433.0064            CHN             167   \n",
              "92                    658.7101  BEL, FRA, DEU             168   \n",
              "93                   4330.6743            NaN             173   \n",
              "94                    106.7626            NaN             176   \n",
              "95                      9.6407            NaN             179   \n",
              "\n",
              "    mostPollutedCountries_particlePollution  \n",
              "91                                    23.50  \n",
              "92                                     9.60  \n",
              "93                                     9.40  \n",
              "94                                     3.30  \n",
              "95                                     5.55  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7a84ef1c-47d3-471a-9898-e36f6de759ff\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pollution_2023</th>\n",
              "      <th>pollution_growth_Rate</th>\n",
              "      <th>country_name</th>\n",
              "      <th>ccn3</th>\n",
              "      <th>country_region</th>\n",
              "      <th>united_nation_Member</th>\n",
              "      <th>country_land_Area_in_Km</th>\n",
              "      <th>pollution_density_in_km</th>\n",
              "      <th>pollution_density_per_Mile</th>\n",
              "      <th>share_borders</th>\n",
              "      <th>pollution_Rank</th>\n",
              "      <th>mostPollutedCountries_particlePollution</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>704149</td>\n",
              "      <td>0.01292</td>\n",
              "      <td>Macau</td>\n",
              "      <td>446</td>\n",
              "      <td>Asia</td>\n",
              "      <td>False</td>\n",
              "      <td>32.9</td>\n",
              "      <td>21402.7052</td>\n",
              "      <td>55433.0064</td>\n",
              "      <td>CHN</td>\n",
              "      <td>167</td>\n",
              "      <td>23.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>654768</td>\n",
              "      <td>0.01107</td>\n",
              "      <td>Luxembourg</td>\n",
              "      <td>442</td>\n",
              "      <td>Europe</td>\n",
              "      <td>True</td>\n",
              "      <td>2574.5</td>\n",
              "      <td>254.3282</td>\n",
              "      <td>658.7101</td>\n",
              "      <td>BEL, FRA, DEU</td>\n",
              "      <td>168</td>\n",
              "      <td>9.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>535064</td>\n",
              "      <td>0.00333</td>\n",
              "      <td>Malta</td>\n",
              "      <td>470</td>\n",
              "      <td>Europe</td>\n",
              "      <td>True</td>\n",
              "      <td>320.0</td>\n",
              "      <td>1672.0750</td>\n",
              "      <td>4330.6743</td>\n",
              "      <td>NaN</td>\n",
              "      <td>173</td>\n",
              "      <td>9.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>412623</td>\n",
              "      <td>0.00644</td>\n",
              "      <td>Bahamas</td>\n",
              "      <td>44</td>\n",
              "      <td>North America</td>\n",
              "      <td>True</td>\n",
              "      <td>10010.0</td>\n",
              "      <td>41.2211</td>\n",
              "      <td>106.7626</td>\n",
              "      <td>NaN</td>\n",
              "      <td>176</td>\n",
              "      <td>3.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>375318</td>\n",
              "      <td>0.00649</td>\n",
              "      <td>Iceland</td>\n",
              "      <td>352</td>\n",
              "      <td>Europe</td>\n",
              "      <td>True</td>\n",
              "      <td>100830.0</td>\n",
              "      <td>3.7223</td>\n",
              "      <td>9.6407</td>\n",
              "      <td>NaN</td>\n",
              "      <td>179</td>\n",
              "      <td>5.55</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a84ef1c-47d3-471a-9898-e36f6de759ff')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7a84ef1c-47d3-471a-9898-e36f6de759ff button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7a84ef1c-47d3-471a-9898-e36f6de759ff');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3cf6f6e9-4980-4ed7-be3f-c1c777d7cb36\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3cf6f6e9-4980-4ed7-be3f-c1c777d7cb36')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3cf6f6e9-4980-4ed7-be3f-c1c777d7cb36 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"pollution_2023\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 144413,\n        \"min\": 375318,\n        \"max\": 704149,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          654768,\n          375318,\n          535064\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0038775443259877764,\n        \"min\": 0.00333,\n        \"max\": 0.01292,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.01107,\n          0.00649,\n          0.00333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Luxembourg\",\n          \"Iceland\",\n          \"Malta\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ccn3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 177,\n        \"min\": 44,\n        \"max\": 470,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          442,\n          352,\n          470\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_region\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Asia\",\n          \"Europe\",\n          \"North America\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"united_nation_Member\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_land_Area_in_Km\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 43832.112292553276,\n        \"min\": 32.9,\n        \"max\": 100830.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2574.5,\n          100830.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_density_in_km\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9376.416706848,\n        \"min\": 3.7223,\n        \"max\": 21402.7052,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          254.3282,\n          3.7223\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_density_per_Mile\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24284.919242249805,\n        \"min\": 9.6407,\n        \"max\": 55433.0064,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          658.7101,\n          9.6407\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"share_borders\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"BEL, FRA, DEU\",\n          \"CHN\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 167,\n        \"max\": 179,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          168,\n          179\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mostPollutedCountries_particlePollution\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.859675565823313,\n        \"min\": 3.3,\n        \"max\": 23.5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          9.6,\n          5.55\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.size"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GQRLb-qZq-Bm",
        "outputId": "d69811e5-dabc-4621-accc-be1af0ec4003"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1152"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "13H7kcCTq_jx",
        "outputId": "bb2384ca-c8e2-4793-f692-49be09086b3a"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(96, 12)"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0Smue8-7zah8",
        "outputId": "017e7c06-79ee-4035-f5da-8123f68d2764"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['pollution_2023', 'pollution_growth_Rate', 'country_name', 'ccn3',\n",
              "       'country_region', 'united_nation_Member', 'country_land_Area_in_Km',\n",
              "       'pollution_density_in_km', 'pollution_density_per_Mile',\n",
              "       'share_borders', 'pollution_Rank',\n",
              "       'mostPollutedCountries_particlePollution'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"pollution_2023\"].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ffARiVCxu2O1",
        "outputId": "40da23c2-8927-494c-ffb1-c63bac59240f"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1428627663    1\n",
              "1425671352    1\n",
              "6014723       1\n",
              "6687717       1\n",
              "6735347       1\n",
              "             ..\n",
              "45773884      1\n",
              "47519628      1\n",
              "48582334      1\n",
              "51784059      1\n",
              "375318        1\n",
              "Name: pollution_2023, Length: 96, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n"
      ],
      "metadata": {
        "id": "bw7ucUYewzf1"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x=df['pollution_2023']\n",
        "plt.hist(x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 535
        },
        "id": "IIEIPZGUxSUk",
        "outputId": "b2284f54-31ff-46c9-d5d7-36316ad460fc"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([87.,  6.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  2.]),\n",
              " array([3.75318000e+05, 1.43200552e+08, 2.86025787e+08, 4.28851022e+08,\n",
              "        5.71676256e+08, 7.14501490e+08, 8.57326725e+08, 1.00015196e+09,\n",
              "        1.14297719e+09, 1.28580243e+09, 1.42862766e+09]),\n",
              " <BarContainer object of 10 artists>)"
            ]
          },
          "metadata": {},
          "execution_count": 10
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.hist(df['pollution_growth_Rate'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 517
        },
        "id": "qTEkLRUbxdIV",
        "outputId": "32785d70-c5d9-4d3b-9ae7-f8572721f522"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([ 1.,  0.,  0.,  0.,  1., 18., 52., 16.,  7.,  1.]),\n",
              " array([-7.4480e-02, -6.2052e-02, -4.9624e-02, -3.7196e-02, -2.4768e-02,\n",
              "        -1.2340e-02,  8.8000e-05,  1.2516e-02,  2.4944e-02,  3.7372e-02,\n",
              "         4.9800e-02]),\n",
              " <BarContainer object of 10 artists>)"
            ]
          },
          "metadata": {},
          "execution_count": 11
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=df['country_name'].head(5)\n",
        "plt.hist(x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 482
        },
        "id": "KLUXzeKpxtGJ",
        "outputId": "4d5f5436-ace0-4cf9-94fb-805e5c6224ad"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([1., 0., 1., 0., 0., 1., 0., 1., 0., 1.]),\n",
              " array([0. , 0.4, 0.8, 1.2, 1.6, 2. , 2.4, 2.8, 3.2, 3.6, 4. ]),\n",
              " <BarContainer object of 10 artists>)"
            ]
          },
          "metadata": {},
          "execution_count": 12
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=df['ccn3'].head(5)\n",
        "plt.hist(x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 499
        },
        "id": "hDZHgeP_1FtL",
        "outputId": "8959d403-f5fc-4706-aa3f-4541c645a06d"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([1., 0., 2., 0., 0., 0., 1., 0., 0., 1.]),\n",
              " array([156. , 224.4, 292.8, 361.2, 429.6, 498. , 566.4, 634.8, 703.2,\n",
              "        771.6, 840. ]),\n",
              " <BarContainer object of 10 artists>)"
            ]
          },
          "metadata": {},
          "execution_count": 13
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=df['country_land_Area_in_Km']\n",
        "plt.hist(x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 535
        },
        "id": "xcWtM2dZ2ARk",
        "outputId": "b7a7dcf7-2426-4328-caae-bf094677be4c"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([82.,  8.,  0.,  0.,  1.,  4.,  0.,  0.,  0.,  1.]),\n",
              " array([3.29000000e+01, 1.63771661e+06, 3.27540032e+06, 4.91308403e+06,\n",
              "        6.55076774e+06, 8.18845145e+06, 9.82613516e+06, 1.14638189e+07,\n",
              "        1.31015026e+07, 1.47391863e+07, 1.63768700e+07]),\n",
              " <BarContainer object of 10 artists>)"
            ]
          },
          "metadata": {},
          "execution_count": 14
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAh8AAAGvCAYAAAD7f7c5AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAnDklEQVR4nO3df3TU1Z3/8VdCyIQCMzH8mElqgEiBAAVELCEIq2I0ZrMcWFIED61RUbpuZAtZask5ArJiE9AKi8uP1mKQrUBhK1jWFqqpgaMG1ABb/EXBRhOFGVq3mQmxGdjkfv/oYb6OAXSSyQ0Dz8c5nyNzP/dz5/25vcm8+pnPZOKMMUYAAACWxHd2AQAA4MpC+AAAAFYRPgAAgFWEDwAAYBXhAwAAWEX4AAAAVhE+AACAVYQPAABgVUJnF/BFLS0tOnHihHr27Km4uLjOLgcAAHwFxhg1NDQoLS1N8fEXv7ZxyYWPEydOKD09vbPLAAAAbVBXV6err776on0uufDRs2dPSX8r3ul0dnI1AADgqwgEAkpPTw+9jl/MJRc+zr3V4nQ6CR8AAMSYr3LLBDecAgAAqwgfAADAKsIHAACwivABAACsInwAAACrCB8AAMAqwgcAALCK8AEAAKwifAAAAKsIHwAAwCrCBwAAsIrwAQAArCJ8AAAAqwgfAADAqoTOLsC2AQtf7OwSIvZhWX5nlwAAQNRw5QMAAFhF+AAAAFYRPgAAgFWEDwAAYFVE4aO5uVmLFi1SRkaGunXrpoEDB+rRRx+VMSbUxxijxYsXKzU1Vd26dVNOTo6OHTsW9cIBAEBsiih8LF++XOvWrdN//Md/6L333tPy5cu1YsUKPfXUU6E+K1as0OrVq7V+/XodOHBA3bt3V25urpqamqJePAAAiD0RfdT29ddf15QpU5Sf/7ePfg4YMEBbtmzRG2+8IelvVz1WrVqlhx9+WFOmTJEkbdq0SW63Wzt37tTMmTOjXD4AAIg1EV35GD9+vCoqKvSHP/xBkvQ///M/evXVV5WXlydJqqmpkdfrVU5OTugYl8ulrKwsVVVVnXfMYDCoQCAQtgEAgMtXRFc+Fi5cqEAgoMzMTHXp0kXNzc167LHHNGvWLEmS1+uVJLnd7rDj3G53aN8XlZaWaunSpW2pHQAAxKCIrnxs27ZNzz33nDZv3qyDBw/q2Wef1RNPPKFnn322zQWUlJTI7/eHtrq6ujaPBQAALn0RXfn4wQ9+oIULF4bu3RgxYoQ++ugjlZaWqrCwUB6PR5Lk8/mUmpoaOs7n8+naa68975gOh0MOh6ON5QMAgFgT0ZWPzz77TPHx4Yd06dJFLS0tkqSMjAx5PB5VVFSE9gcCAR04cEDZ2dlRKBcAAMS6iK58TJ48WY899pj69eun4cOH69ChQ3ryySd17733SpLi4uI0b948LVu2TIMGDVJGRoYWLVqktLQ0TZ06tSPqBwAAMSai8PHUU09p0aJF+ud//medOnVKaWlp+t73vqfFixeH+jz00ENqbGzUnDlzVF9frwkTJmj37t1KSkqKevEAACD2xJnP/3nSS0AgEJDL5ZLf75fT6Yz6+AMWvhj1MTvah2X5nV0CAAAXFcnrN9/tAgAArCJ8AAAAqwgfAADAKsIHAACwivABAACsInwAAACrCB8AAMAqwgcAALCK8AEAAKwifAAAAKsIHwAAwCrCBwAAsIrwAQAArCJ8AAAAqwgfAADAKsIHAACwivABAACsInwAAACrCB8AAMAqwgcAALCK8AEAAKwifAAAAKsIHwAAwCrCBwAAsIrwAQAArCJ8AAAAqwgfAADAKsIHAACwivABAACsInwAAACrCB8AAMAqwgcAALAqovAxYMAAxcXFtdqKiookSU1NTSoqKlKvXr3Uo0cPFRQUyOfzdUjhAAAgNkUUPt58802dPHkytL300kuSpOnTp0uS5s+fr127dmn79u3au3evTpw4oWnTpkW/agAAELMSIuncp0+fsMdlZWUaOHCgbrzxRvn9fm3YsEGbN2/WpEmTJEnl5eUaOnSo9u/fr3HjxkWvagAAELPafM/HmTNn9POf/1z33nuv4uLiVF1drbNnzyonJyfUJzMzU/369VNVVdUFxwkGgwoEAmEbAAC4fLU5fOzcuVP19fW6++67JUler1eJiYlKTk4O6+d2u+X1ei84TmlpqVwuV2hLT09va0kAACAGtDl8bNiwQXl5eUpLS2tXASUlJfL7/aGtrq6uXeMBAIBLW0T3fJzz0Ucf6eWXX9bzzz8favN4PDpz5ozq6+vDrn74fD55PJ4LjuVwOORwONpSBgAAiEFtuvJRXl6uvn37Kj8/P9Q2ZswYde3aVRUVFaG2o0ePqra2VtnZ2e2vFAAAXBYivvLR0tKi8vJyFRYWKiHh/x/ucrk0e/ZsFRcXKyUlRU6nU3PnzlV2djafdAEAACERh4+XX35ZtbW1uvfee1vtW7lypeLj41VQUKBgMKjc3FytXbs2KoUCAIDLQ5wxxnR2EZ8XCATkcrnk9/vldDqjPv6AhS9GfcyO9mFZ/pd3AgCgE0Xy+s13uwAAAKsIHwAAwCrCBwAAsIrwAQAArCJ8AAAAqwgfAADAKsIHAACwivABAACsInwAAACrCB8AAMAqwgcAALCK8AEAAKwifAAAAKsIHwAAwCrCBwAAsIrwAQAArCJ8AAAAqwgfAADAKsIHAACwivABAACsInwAAACrCB8AAMAqwgcAALCK8AEAAKwifAAAAKsIHwAAwCrCBwAAsIrwAQAArCJ8AAAAqwgfAADAKsIHAACwivABAACsijh8fPLJJ/rOd76jXr16qVu3bhoxYoTeeuut0H5jjBYvXqzU1FR169ZNOTk5OnbsWFSLBgAAsSui8PGXv/xFN9xwg7p27arf/OY3evfdd/XjH/9YV111VajPihUrtHr1aq1fv14HDhxQ9+7dlZubq6ampqgXDwAAYk9CJJ2XL1+u9PR0lZeXh9oyMjJC/zbGaNWqVXr44Yc1ZcoUSdKmTZvkdru1c+dOzZw5M0plAwCAWBXRlY9f/epXuv766zV9+nT17dtXo0eP1tNPPx3aX1NTI6/Xq5ycnFCby+VSVlaWqqqqzjtmMBhUIBAI2wAAwOUrovDxxz/+UevWrdOgQYO0Z88ePfDAA/qXf/kXPfvss5Ikr9crSXK73WHHud3u0L4vKi0tlcvlCm3p6eltOQ8AABAjIgofLS0tuu666/SjH/1Io0eP1pw5c3T//fdr/fr1bS6gpKREfr8/tNXV1bV5LAAAcOmLKHykpqZq2LBhYW1Dhw5VbW2tJMnj8UiSfD5fWB+fzxfa90UOh0NOpzNsAwAAl6+IwscNN9ygo0ePhrX94Q9/UP/+/SX97eZTj8ejioqK0P5AIKADBw4oOzs7CuUCAIBYF9GnXebPn6/x48frRz/6ke644w698cYb+ulPf6qf/vSnkqS4uDjNmzdPy5Yt06BBg5SRkaFFixYpLS1NU6dO7Yj6AQBAjIkofHzrW9/Sjh07VFJSon/7t39TRkaGVq1apVmzZoX6PPTQQ2psbNScOXNUX1+vCRMmaPfu3UpKSop68QAAIPbEGWNMZxfxeYFAQC6XS36/v0Pu/xiw8MWoj9nRPizL7+wSAAC4qEhev/luFwAAYBXhAwAAWEX4AAAAVhE+AACAVYQPAABgFeEDAABYRfgAAABWET4AAIBVhA8AAGAV4QMAAFhF+AAAAFYRPgAAgFWEDwAAYBXhAwAAWEX4AAAAVhE+AACAVYQPAABgFeEDAABYRfgAAABWET4AAIBVhA8AAGAV4QMAAFhF+AAAAFYRPgAAgFWEDwAAYBXhAwAAWEX4AAAAVhE+AACAVYQPAABgFeEDAABYRfgAAABWRRQ+HnnkEcXFxYVtmZmZof1NTU0qKipSr1691KNHDxUUFMjn80W9aAAAELsivvIxfPhwnTx5MrS9+uqroX3z58/Xrl27tH37du3du1cnTpzQtGnTolowAACIbQkRH5CQII/H06rd7/drw4YN2rx5syZNmiRJKi8v19ChQ7V//36NGzeu/dUCAICYF/GVj2PHjiktLU3XXHONZs2apdraWklSdXW1zp49q5ycnFDfzMxM9evXT1VVVRccLxgMKhAIhG0AAODyFVH4yMrK0saNG7V7926tW7dONTU1mjhxohoaGuT1epWYmKjk5OSwY9xut7xe7wXHLC0tlcvlCm3p6eltOhEAABAbInrbJS8vL/TvkSNHKisrS/3799e2bdvUrVu3NhVQUlKi4uLi0ONAIEAAAQDgMtauj9omJydr8ODBOn78uDwej86cOaP6+vqwPj6f77z3iJzjcDjkdDrDNgAAcPlqV/g4ffq0PvjgA6WmpmrMmDHq2rWrKioqQvuPHj2q2tpaZWdnt7tQAABweYjobZcFCxZo8uTJ6t+/v06cOKElS5aoS5cuuvPOO+VyuTR79mwVFxcrJSVFTqdTc+fOVXZ2Np90AQAAIRGFj48//lh33nmnPv30U/Xp00cTJkzQ/v371adPH0nSypUrFR8fr4KCAgWDQeXm5mrt2rUdUjgAAIhNccYY09lFfF4gEJDL5ZLf7++Q+z8GLHwx6mN2tA/L8ju7BAAALiqS12++2wUAAFhF+AAAAFYRPgAAgFWEDwAAYBXhAwAAWEX4AAAAVhE+AACAVYQPAABgFeEDAABYRfgAAABWET4AAIBVhA8AAGAV4QMAAFhF+AAAAFYRPgAAgFWEDwAAYBXhAwAAWEX4AAAAVhE+AACAVYQPAABgFeEDAABYRfgAAABWET4AAIBVhA8AAGAV4QMAAFhF+AAAAFYRPgAAgFWEDwAAYBXhAwAAWEX4AAAAVhE+AACAVYQPAABgVbvCR1lZmeLi4jRv3rxQW1NTk4qKitSrVy/16NFDBQUF8vl87a0TAABcJtocPt5880395Cc/0ciRI8Pa58+fr127dmn79u3au3evTpw4oWnTprW7UAAAcHloU/g4ffq0Zs2apaefflpXXXVVqN3v92vDhg168sknNWnSJI0ZM0bl5eV6/fXXtX///qgVDQAAYlebwkdRUZHy8/OVk5MT1l5dXa2zZ8+GtWdmZqpfv36qqqo671jBYFCBQCBsAwAAl6+ESA/YunWrDh48qDfffLPVPq/Xq8TERCUnJ4e1u91ueb3e845XWlqqpUuXRloGAACIURFd+airq9P3v/99Pffcc0pKSopKASUlJfL7/aGtrq4uKuMCAIBLU0Tho7q6WqdOndJ1112nhIQEJSQkaO/evVq9erUSEhLkdrt15swZ1dfXhx3n8/nk8XjOO6bD4ZDT6QzbAADA5Suit11uueUWHTlyJKztnnvuUWZmpn74wx8qPT1dXbt2VUVFhQoKCiRJR48eVW1trbKzs6NXNQAAiFkRhY+ePXvqm9/8Zlhb9+7d1atXr1D77NmzVVxcrJSUFDmdTs2dO1fZ2dkaN25c9KoGAAAxK+IbTr/MypUrFR8fr4KCAgWDQeXm5mrt2rXRfhoAABCj4owxprOL+LxAICCXyyW/398h938MWPhi1MfsaB+W5Xd2CQAAXFQkr998twsAALCK8AEAAKwifAAAAKsIHwAAwCrCBwAAsIrwAQAArCJ8AAAAqwgfAADAKsIHAACwivABAACsInwAAACrCB8AAMAqwgcAALCK8AEAAKwifAAAAKsIHwAAwCrCBwAAsIrwAQAArCJ8AAAAqwgfAADAKsIHAACwivABAACsInwAAACrCB8AAMAqwgcAALCK8AEAAKwifAAAAKsIHwAAwCrCBwAAsIrwAQAArCJ8AAAAqwgfAADAqojCx7p16zRy5Eg5nU45nU5lZ2frN7/5TWh/U1OTioqK1KtXL/Xo0UMFBQXy+XxRLxoAAMSuiMLH1VdfrbKyMlVXV+utt97SpEmTNGXKFL3zzjuSpPnz52vXrl3avn279u7dqxMnTmjatGkdUjgAAIhNccYY054BUlJS9Pjjj+vb3/62+vTpo82bN+vb3/62JOn999/X0KFDVVVVpXHjxn2l8QKBgFwul/x+v5xOZ3tKO68BC1+M+pgd7cOy/M4uAQCAi4rk9bvN93w0Nzdr69atamxsVHZ2tqqrq3X27Fnl5OSE+mRmZqpfv36qqqq64DjBYFCBQCBsAwAAl6+Iw8eRI0fUo0cPORwO/dM//ZN27NihYcOGyev1KjExUcnJyWH93W63vF7vBccrLS2Vy+UKbenp6RGfBAAAiB0Rh48hQ4bo8OHDOnDggB544AEVFhbq3XffbXMBJSUl8vv9oa2urq7NYwEAgEtfQqQHJCYm6hvf+IYkacyYMXrzzTf17//+75oxY4bOnDmj+vr6sKsfPp9PHo/nguM5HA45HI7IKwcAADGp3X/no6WlRcFgUGPGjFHXrl1VUVER2nf06FHV1tYqOzu7vU8DAAAuExFd+SgpKVFeXp769eunhoYGbd68WZWVldqzZ49cLpdmz56t4uJipaSkyOl0au7cucrOzv7Kn3QBAACXv4jCx6lTp3TXXXfp5MmTcrlcGjlypPbs2aNbb71VkrRy5UrFx8eroKBAwWBQubm5Wrt2bYcUDgAAYlO7/85HtPF3Plrj73wAAC51Vv7OBwAAQFsQPgAAgFWEDwAAYBXhAwAAWEX4AAAAVhE+AACAVYQPAABgFeEDAABYRfgAAABWET4AAIBVhA8AAGAV4QMAAFhF+AAAAFYRPgAAgFWEDwAAYBXhAwAAWEX4AAAAVhE+AACAVYQPAABgFeEDAABYRfgAAABWET4AAIBVhA8AAGAV4QMAAFhF+AAAAFYRPgAAgFWEDwAAYBXhAwAAWEX4AAAAVhE+AACAVYQPAABgFeEDAABYFVH4KC0t1be+9S317NlTffv21dSpU3X06NGwPk1NTSoqKlKvXr3Uo0cPFRQUyOfzRbVoAAAQuyIKH3v37lVRUZH279+vl156SWfPntVtt92mxsbGUJ/58+dr165d2r59u/bu3asTJ05o2rRpUS8cAADEpoRIOu/evTvs8caNG9W3b19VV1fr7/7u7+T3+7VhwwZt3rxZkyZNkiSVl5dr6NCh2r9/v8aNGxe9ygEAQExq1z0ffr9fkpSSkiJJqq6u1tmzZ5WTkxPqk5mZqX79+qmqquq8YwSDQQUCgbANAABcvtocPlpaWjRv3jzdcMMN+uY3vylJ8nq9SkxMVHJyclhft9str9d73nFKS0vlcrlCW3p6eltLAgAAMaDN4aOoqEhvv/22tm7d2q4CSkpK5Pf7Q1tdXV27xgMAAJe2iO75OOfBBx/Uf//3f2vfvn26+uqrQ+0ej0dnzpxRfX192NUPn88nj8dz3rEcDoccDkdbygAAADEooisfxhg9+OCD2rFjh373u98pIyMjbP+YMWPUtWtXVVRUhNqOHj2q2tpaZWdnR6diAAAQ0yK68lFUVKTNmzfrhRdeUM+ePUP3cbhcLnXr1k0ul0uzZ89WcXGxUlJS5HQ6NXfuXGVnZ/NJFwAAICnC8LFu3TpJ0k033RTWXl5errvvvluStHLlSsXHx6ugoEDBYFC5ublau3ZtVIoFAACxL6LwYYz50j5JSUlas2aN1qxZ0+aiAADA5YvvdgEAAFYRPgAAgFWEDwAAYBXhAwAAWEX4AAAAVhE+AACAVYQPAABgFeEDAABYRfgAAABWET4AAIBVhA8AAGAV4QMAAFhF+AAAAFYRPgAAgFWEDwAAYBXhAwAAWEX4AAAAVhE+AACAVYQPAABgFeEDAABYRfgAAABWET4AAIBVhA8AAGAV4QMAAFhF+AAAAFYRPgAAgFWEDwAAYBXhAwAAWEX4AAAAVhE+AACAVYQPAABgFeEDAABYFXH42LdvnyZPnqy0tDTFxcVp586dYfuNMVq8eLFSU1PVrVs35eTk6NixY9GqFwAAxLiIw0djY6NGjRqlNWvWnHf/ihUrtHr1aq1fv14HDhxQ9+7dlZubq6ampnYXCwAAYl9CpAfk5eUpLy/vvPuMMVq1apUefvhhTZkyRZK0adMmud1u7dy5UzNnzmxftQAAIOZF9Z6Pmpoaeb1e5eTkhNpcLpeysrJUVVV13mOCwaACgUDYBgAALl9RDR9er1eS5Ha7w9rdbndo3xeVlpbK5XKFtvT09GiWBAAALjGd/mmXkpIS+f3+0FZXV9fZJQEAgA4U1fDh8XgkST6fL6zd5/OF9n2Rw+GQ0+kM2wAAwOUrquEjIyNDHo9HFRUVobZAIKADBw4oOzs7mk8FAABiVMSfdjl9+rSOHz8eelxTU6PDhw8rJSVF/fr107x587Rs2TINGjRIGRkZWrRokdLS0jR16tRo1g0AAGJUxOHjrbfe0s033xx6XFxcLEkqLCzUxo0b9dBDD6mxsVFz5sxRfX29JkyYoN27dyspKSl6VQMAgJgVZ4wxnV3E5wUCAblcLvn9/g65/2PAwhejPmZH+7Asv7NLAADgoiJ5/e70T7sAAIArC+EDAABYFfE9H7CPt4oAAJcTrnwAAACrCB8AAMAqwgcAALCK8AEAAKwifAAAAKsIHwAAwCrCBwAAsIrwAQAArCJ8AAAAqwgfAADAKsIHAACwivABAACsInwAAACrCB8AAMAqwgcAALCK8AEAAKxK6OwCAFxZBix8sbNLiNiHZfmdXQJwWeHKBwAAsIrwAQAArCJ8AAAAqwgfAADAKsIHAACwivABAACsInwAAACrCB8AAMAqwgcAALCK8AEAAKwifAAAAKsIHwAAwKoO+2K5NWvW6PHHH5fX69WoUaP01FNPaezYsR31dMAVKRa/pA243MTiz2Fnf1lih1z5+MUvfqHi4mItWbJEBw8e1KhRo5Sbm6tTp051xNMBAIAY0iHh48knn9T999+ve+65R8OGDdP69ev1ta99Tc8880xHPB0AAIghUX/b5cyZM6qurlZJSUmoLT4+Xjk5OaqqqmrVPxgMKhgMhh77/X5JUiAQiHZpkqSW4GcdMi7CddT/fgjHeraD9YyLicWfw45Y0+fGNMZ8ad+oh48///nPam5ultvtDmt3u916//33W/UvLS3V0qVLW7Wnp6dHuzRY5FrV2RUA0cN6xuWmI9d0Q0ODXC7XRft02A2nX1VJSYmKi4tDj1taWvS///u/6tWrl+Li4qL6XIFAQOnp6aqrq5PT6Yzq2LGKOWmNOQnHfLTGnLTGnLR2pc2JMUYNDQ1KS0v70r5RDx+9e/dWly5d5PP5wtp9Pp88Hk+r/g6HQw6HI6wtOTk52mWFcTqdV8RCiARz0hpzEo75aI05aY05ae1KmpMvu+JxTtRvOE1MTNSYMWNUUVERamtpaVFFRYWys7Oj/XQAACDGdMjbLsXFxSosLNT111+vsWPHatWqVWpsbNQ999zTEU8HAABiSIeEjxkzZuhPf/qTFi9eLK/Xq2uvvVa7d+9udROqbQ6HQ0uWLGn1Ns+VjDlpjTkJx3y0xpy0xpy0xpxcWJz5Kp+JAQAAiBK+2wUAAFhF+AAAAFYRPgAAgFWEDwAAYFVMh481a9ZowIABSkpKUlZWlt54442L9t++fbsyMzOVlJSkESNG6Ne//nXYfmOMFi9erNTUVHXr1k05OTk6duxYR55C1EUyJ08//bQmTpyoq666SldddZVycnJa9b/77rsVFxcXtt1+++0dfRpRFcmcbNy4sdX5JiUlhfW50tbJTTfd1GpO4uLilJ///7+SO5bXyb59+zR58mSlpaUpLi5OO3fu/NJjKisrdd1118nhcOgb3/iGNm7c2KpPpL+fLiWRzsnzzz+vW2+9VX369JHT6VR2drb27NkT1ueRRx5ptUYyMzM78CyiK9I5qaysPO/PjdfrDesXy+ukPWI2fPziF79QcXGxlixZooMHD2rUqFHKzc3VqVOnztv/9ddf15133qnZs2fr0KFDmjp1qqZOnaq333471GfFihVavXq11q9frwMHDqh79+7Kzc1VU1OTrdNql0jnpLKyUnfeeadeeeUVVVVVKT09Xbfddps++eSTsH633367Tp48Gdq2bNli43SiItI5kf721wg/f74fffRR2P4rbZ08//zzYfPx9ttvq0uXLpo+fXpYv1hdJ42NjRo1apTWrFnzlfrX1NQoPz9fN998sw4fPqx58+bpvvvuC3uxbcu6u5REOif79u3Trbfeql//+teqrq7WzTffrMmTJ+vQoUNh/YYPHx62Rl599dWOKL9DRDon5xw9ejTsnPv27RvaF+vrpF1MjBo7dqwpKioKPW5ubjZpaWmmtLT0vP3vuOMOk5+fH9aWlZVlvve97xljjGlpaTEej8c8/vjjof319fXG4XCYLVu2dMAZRF+kc/JF//d//2d69uxpnn322VBbYWGhmTJlSrRLtSbSOSkvLzcul+uC47FOjFm5cqXp2bOnOX36dKgt1tfJOZLMjh07LtrnoYceMsOHDw9rmzFjhsnNzQ09bu8cX0q+ypycz7Bhw8zSpUtDj5csWWJGjRoVvcI60VeZk1deecVIMn/5y18u2OdyWieRiskrH2fOnFF1dbVycnJCbfHx8crJyVFVVdV5j6mqqgrrL0m5ubmh/jU1NfJ6vWF9XC6XsrKyLjjmpaQtc/JFn332mc6ePauUlJSw9srKSvXt21dDhgzRAw88oE8//TSqtXeUts7J6dOn1b9/f6Wnp2vKlCl65513QvtYJ9KGDRs0c+ZMde/ePaw9VtdJpL7sd0k05jjWtbS0qKGhodXvkmPHjiktLU3XXHONZs2apdra2k6q0J5rr71WqampuvXWW/Xaa6+F2q/0dRKT4ePPf/6zmpubW/3FVLfb3er9tHO8Xu9F+5/7byRjXkraMidf9MMf/lBpaWlhPwy33367Nm3apIqKCi1fvlx79+5VXl6empubo1p/R2jLnAwZMkTPPPOMXnjhBf385z9XS0uLxo8fr48//lgS6+SNN97Q22+/rfvuuy+sPZbXSaQu9LskEAjor3/9a1R+FmPdE088odOnT+uOO+4ItWVlZWnjxo3avXu31q1bp5qaGk2cOFENDQ2dWGnHSU1N1fr16/XLX/5Sv/zlL5Wenq6bbrpJBw8elBSd39mxrEP+vDpiT1lZmbZu3arKysqwGyxnzpwZ+veIESM0cuRIDRw4UJWVlbrllls6o9QOlZ2dHfYFiOPHj9fQoUP1k5/8RI8++mgnVnZp2LBhg0aMGKGxY8eGtV9p6wQXtnnzZi1dulQvvPBC2P0NeXl5oX+PHDlSWVlZ6t+/v7Zt26bZs2d3RqkdasiQIRoyZEjo8fjx4/XBBx9o5cqV+s///M9OrOzSEJNXPnr37q0uXbrI5/OFtft8Pnk8nvMe4/F4Ltr/3H8jGfNS0pY5OeeJJ55QWVmZfvvb32rkyJEX7XvNNdeod+/eOn78eLtr7mjtmZNzunbtqtGjR4fO90peJ42Njdq6detXeqGIpXUSqQv9LnE6nerWrVtU1l2s2rp1q+677z5t27at1VtTX5ScnKzBgwdflmvkQsaOHRs63yt5nUgxGj4SExM1ZswYVVRUhNpaWlpUUVER9v9aPy87OzusvyS99NJLof4ZGRnyeDxhfQKBgA4cOHDBMS8lbZkT6W+f3Hj00Ue1e/duXX/99V/6PB9//LE+/fRTpaamRqXujtTWOfm85uZmHTlyJHS+V+o6kf72UfVgMKjvfOc7X/o8sbROIvVlv0uise5i0ZYtW3TPPfdoy5YtYR/DvpDTp0/rgw8+uCzXyIUcPnw4dL5X6joJ6ew7Xttq69atxuFwmI0bN5p3333XzJkzxyQnJxuv12uMMea73/2uWbhwYaj/a6+9ZhISEswTTzxh3nvvPbNkyRLTtWtXc+TIkVCfsrIyk5ycbF544QXz+9//3kyZMsVkZGSYv/71r9bPry0inZOysjKTmJho/uu//sucPHkytDU0NBhjjGloaDALFiwwVVVVpqamxrz88svmuuuuM4MGDTJNTU2dco6RinROli5davbs2WM++OADU11dbWbOnGmSkpLMO++8E+pzpa2TcyZMmGBmzJjRqj3W10lDQ4M5dOiQOXTokJFknnzySXPo0CHz0UcfGWOMWbhwofnud78b6v/HP/7RfO1rXzM/+MEPzHvvvWfWrFljunTpYnbv3h3q82VzfKmLdE6ee+45k5CQYNasWRP2u6S+vj7U51//9V9NZWWlqampMa+99prJyckxvXv3NqdOnbJ+fm0R6ZysXLnS7Ny50xw7dswcOXLEfP/73zfx8fHm5ZdfDvWJ9XXSHjEbPowx5qmnnjL9+vUziYmJZuzYsWb//v2hfTfeeKMpLCwM679t2zYzePBgk5iYaIYPH25efPHFsP0tLS1m0aJFxu12G4fDYW655RZz9OhRG6cSNZHMSf/+/Y2kVtuSJUuMMcZ89tln5rbbbjN9+vQxXbt2Nf379zf3339/zP1gRDIn8+bNC/V1u93m7//+783BgwfDxrvS1okxxrz//vtGkvntb3/baqxYXyfnPhL5xe3cHBQWFpobb7yx1THXXnutSUxMNNdcc40pLy9vNe7F5vhSF+mc3HjjjRftb8zfPo6cmppqEhMTzde//nUzY8YMc/z4cbsn1g6Rzsny5cvNwIEDTVJSkklJSTE33XST+d3vftdq3FheJ+0RZ4wxVi6xAAAAKEbv+QAAALGL8AEAAKwifAAAAKsIHwAAwCrCBwAAsIrwAQAArCJ8AAAAqwgfAABcIfbt26fJkycrLS1NcXFx2rlzZ0THP/LII4qLi2u1de/ePaJxCB8AAFwhGhsbNWrUKK1Zs6ZNxy9YsEAnT54M24YNG6bp06dHNA7hAwCAK0ReXp6WLVumf/zHfzzv/mAwqAULFujrX/+6unfvrqysLFVWVob29+jRQx6PJ7T5fD69++67X+nbrj+P8AEAACRJDz74oKqqqrR161b9/ve/1/Tp03X77bfr2LFj5+3/s5/9TIMHD9bEiRMjeh7CBwAAUG1trcrLy7V9+3ZNnDhRAwcO1IIFCzRhwgSVl5e36t/U1KTnnnsu4qsekpQQjYIBAEBsO3LkiJqbmzV48OCw9mAwqF69erXqv2PHDjU0NKiwsDDi5yJ8AAAAnT59Wl26dFF1dbW6dOkStq9Hjx6t+v/sZz/TP/zDP8jtdkf8XIQPAACg0aNHq7m5WadOnfrSezhqamr0yiuv6Fe/+lWbnovwAQDAFeL06dM6fvx46HFNTY0OHz6slJQUDR48WLNmzdJdd92lH//4xxo9erT+9Kc/qaKiQiNHjlR+fn7ouGeeeUapqanKy8trUx1xxhjT7rMBAACXvMrKSt18882t2gsLC7Vx40adPXtWy5Yt06ZNm/TJJ5+od+/eGjdunJYuXaoRI0ZIklpaWtS/f3/dddddeuyxx9pUB+EDAABYxUdtAQCAVYQPAABgFeEDAABYRfgAAABWET4AAIBVhA8AAGAV4QMAAFhF+AAAAFYRPgAAgFWEDwAAYBXhAwAAWEX4AAAAVv0/XekRcUTPibAAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=df['pollution_density_in_km'].head(5)\n",
        "plt.hist(x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 499
        },
        "id": "ubcNl_OE2ptB",
        "outputId": "6d1202b6-67a7-4678-95ac-67ea321752b4"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([1., 0., 2., 0., 0., 0., 1., 0., 0., 1.]),\n",
              " array([ 37.1686 ,  81.50207, 125.83554, 170.16901, 214.50248, 258.83595,\n",
              "        303.16942, 347.50289, 391.83636, 436.16983, 480.5033 ]),\n",
              " <BarContainer object of 10 artists>)"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=df['pollution_density_per_Mile'].head(5)\n",
        "plt.hist(x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 499
        },
        "id": "UKRB-wwf27Dt",
        "outputId": "95230128-0d8e-4ba0-ce7f-e41acb2ffd5d"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([1., 0., 2., 0., 0., 0., 1., 0., 0., 1.]),\n",
              " array([  96.2666,  211.0903,  325.914 ,  440.7377,  555.5614,  670.3851,\n",
              "         785.2088,  900.0325, 1014.8562, 1129.6799, 1244.5036]),\n",
              " <BarContainer object of 10 artists>)"
            ]
          },
          "metadata": {},
          "execution_count": 16
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.isna().sum()"
      ],
      "metadata": {
        "id": "eUd9Mxcuap4F",
        "outputId": "8e37e2e5-2a04-4fa6-ef93-36b6c4a99dea",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pollution_2023                              0\n",
              "pollution_growth_Rate                       0\n",
              "country_name                                0\n",
              "ccn3                                        0\n",
              "country_region                              0\n",
              "united_nation_Member                        0\n",
              "country_land_Area_in_Km                     0\n",
              "pollution_density_in_km                     0\n",
              "pollution_density_per_Mile                  0\n",
              "share_borders                              11\n",
              "pollution_Rank                              0\n",
              "mostPollutedCountries_particlePollution     0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"share_borders\"]=df[\"share_borders\"].fillna(df[\"share_borders\"].mode().iloc[0])"
      ],
      "metadata": {
        "id": "D6pTKwP6hy2D"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df['share_borders'].fillna('0',inplace=True)\n",
        "df"
      ],
      "metadata": {
        "id": "VCgInTdMJP1s",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 582
        },
        "outputId": "d6e43123-3648-47c1-cf70-784b8fecfb4e"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    pollution_2023  pollution_growth_Rate   country_name  ccn3 country_region  \\\n",
              "0       1428627663                0.00808          India   356           Asia   \n",
              "1       1425671352               -0.00015          China   156           Asia   \n",
              "2        339996563                0.00505  United States   840  North America   \n",
              "3        277534122                0.00738      Indonesia   360           Asia   \n",
              "4        240485658                0.01976       Pakistan   586           Asia   \n",
              "..             ...                    ...            ...   ...            ...   \n",
              "91          704149                0.01292          Macau   446           Asia   \n",
              "92          654768                0.01107     Luxembourg   442         Europe   \n",
              "93          535064                0.00333          Malta   470         Europe   \n",
              "94          412623                0.00644        Bahamas    44  North America   \n",
              "95          375318                0.00649        Iceland   352         Europe   \n",
              "\n",
              "    united_nation_Member  country_land_Area_in_Km  pollution_density_in_km  \\\n",
              "0                   True                2973190.0                 480.5033   \n",
              "1                   True                9424702.9                 151.2696   \n",
              "2                   True                9147420.0                  37.1686   \n",
              "3                   True                1877519.0                 147.8196   \n",
              "4                   True                 770880.0                 311.9625   \n",
              "..                   ...                      ...                      ...   \n",
              "91                 False                     32.9               21402.7052   \n",
              "92                  True                   2574.5                 254.3282   \n",
              "93                  True                    320.0                1672.0750   \n",
              "94                  True                  10010.0                  41.2211   \n",
              "95                  True                 100830.0                   3.7223   \n",
              "\n",
              "    pollution_density_per_Mile  \\\n",
              "0                    1244.5036   \n",
              "1                     391.7884   \n",
              "2                      96.2666   \n",
              "3                     382.8528   \n",
              "4                     807.9829   \n",
              "..                         ...   \n",
              "91                  55433.0064   \n",
              "92                    658.7101   \n",
              "93                   4330.6743   \n",
              "94                    106.7626   \n",
              "95                      9.6407   \n",
              "\n",
              "                                        share_borders  pollution_Rank  \\\n",
              "0              AFG, BGD, BTN, MMR, CHN, NPL, PAK, LKA               1   \n",
              "1   AFG, BTN, MMR, HKG, IND, KAZ, PRK, KGZ, LAO, M...               2   \n",
              "2                                            CAN, MEX               3   \n",
              "3                                       TLS, MYS, PNG               4   \n",
              "4                                  AFG, CHN, IND, IRN               5   \n",
              "..                                                ...             ...   \n",
              "91                                                CHN             167   \n",
              "92                                      BEL, FRA, DEU             168   \n",
              "93                                                CHN             173   \n",
              "94                                                CHN             176   \n",
              "95                                                CHN             179   \n",
              "\n",
              "    mostPollutedCountries_particlePollution  \n",
              "0                                     58.08  \n",
              "1                                     39.12  \n",
              "2                                      9.04  \n",
              "3                                     51.71  \n",
              "4                                     65.81  \n",
              "..                                      ...  \n",
              "91                                    23.50  \n",
              "92                                     9.60  \n",
              "93                                     9.40  \n",
              "94                                     3.30  \n",
              "95                                     5.55  \n",
              "\n",
              "[96 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3a8a2157-d40c-4a17-a29f-44d75938ecda\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pollution_2023</th>\n",
              "      <th>pollution_growth_Rate</th>\n",
              "      <th>country_name</th>\n",
              "      <th>ccn3</th>\n",
              "      <th>country_region</th>\n",
              "      <th>united_nation_Member</th>\n",
              "      <th>country_land_Area_in_Km</th>\n",
              "      <th>pollution_density_in_km</th>\n",
              "      <th>pollution_density_per_Mile</th>\n",
              "      <th>share_borders</th>\n",
              "      <th>pollution_Rank</th>\n",
              "      <th>mostPollutedCountries_particlePollution</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1428627663</td>\n",
              "      <td>0.00808</td>\n",
              "      <td>India</td>\n",
              "      <td>356</td>\n",
              "      <td>Asia</td>\n",
              "      <td>True</td>\n",
              "      <td>2973190.0</td>\n",
              "      <td>480.5033</td>\n",
              "      <td>1244.5036</td>\n",
              "      <td>AFG, BGD, BTN, MMR, CHN, NPL, PAK, LKA</td>\n",
              "      <td>1</td>\n",
              "      <td>58.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1425671352</td>\n",
              "      <td>-0.00015</td>\n",
              "      <td>China</td>\n",
              "      <td>156</td>\n",
              "      <td>Asia</td>\n",
              "      <td>True</td>\n",
              "      <td>9424702.9</td>\n",
              "      <td>151.2696</td>\n",
              "      <td>391.7884</td>\n",
              "      <td>AFG, BTN, MMR, HKG, IND, KAZ, PRK, KGZ, LAO, M...</td>\n",
              "      <td>2</td>\n",
              "      <td>39.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>339996563</td>\n",
              "      <td>0.00505</td>\n",
              "      <td>United States</td>\n",
              "      <td>840</td>\n",
              "      <td>North America</td>\n",
              "      <td>True</td>\n",
              "      <td>9147420.0</td>\n",
              "      <td>37.1686</td>\n",
              "      <td>96.2666</td>\n",
              "      <td>CAN, MEX</td>\n",
              "      <td>3</td>\n",
              "      <td>9.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>277534122</td>\n",
              "      <td>0.00738</td>\n",
              "      <td>Indonesia</td>\n",
              "      <td>360</td>\n",
              "      <td>Asia</td>\n",
              "      <td>True</td>\n",
              "      <td>1877519.0</td>\n",
              "      <td>147.8196</td>\n",
              "      <td>382.8528</td>\n",
              "      <td>TLS, MYS, PNG</td>\n",
              "      <td>4</td>\n",
              "      <td>51.71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>240485658</td>\n",
              "      <td>0.01976</td>\n",
              "      <td>Pakistan</td>\n",
              "      <td>586</td>\n",
              "      <td>Asia</td>\n",
              "      <td>True</td>\n",
              "      <td>770880.0</td>\n",
              "      <td>311.9625</td>\n",
              "      <td>807.9829</td>\n",
              "      <td>AFG, CHN, IND, IRN</td>\n",
              "      <td>5</td>\n",
              "      <td>65.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>704149</td>\n",
              "      <td>0.01292</td>\n",
              "      <td>Macau</td>\n",
              "      <td>446</td>\n",
              "      <td>Asia</td>\n",
              "      <td>False</td>\n",
              "      <td>32.9</td>\n",
              "      <td>21402.7052</td>\n",
              "      <td>55433.0064</td>\n",
              "      <td>CHN</td>\n",
              "      <td>167</td>\n",
              "      <td>23.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>654768</td>\n",
              "      <td>0.01107</td>\n",
              "      <td>Luxembourg</td>\n",
              "      <td>442</td>\n",
              "      <td>Europe</td>\n",
              "      <td>True</td>\n",
              "      <td>2574.5</td>\n",
              "      <td>254.3282</td>\n",
              "      <td>658.7101</td>\n",
              "      <td>BEL, FRA, DEU</td>\n",
              "      <td>168</td>\n",
              "      <td>9.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>535064</td>\n",
              "      <td>0.00333</td>\n",
              "      <td>Malta</td>\n",
              "      <td>470</td>\n",
              "      <td>Europe</td>\n",
              "      <td>True</td>\n",
              "      <td>320.0</td>\n",
              "      <td>1672.0750</td>\n",
              "      <td>4330.6743</td>\n",
              "      <td>CHN</td>\n",
              "      <td>173</td>\n",
              "      <td>9.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>412623</td>\n",
              "      <td>0.00644</td>\n",
              "      <td>Bahamas</td>\n",
              "      <td>44</td>\n",
              "      <td>North America</td>\n",
              "      <td>True</td>\n",
              "      <td>10010.0</td>\n",
              "      <td>41.2211</td>\n",
              "      <td>106.7626</td>\n",
              "      <td>CHN</td>\n",
              "      <td>176</td>\n",
              "      <td>3.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>375318</td>\n",
              "      <td>0.00649</td>\n",
              "      <td>Iceland</td>\n",
              "      <td>352</td>\n",
              "      <td>Europe</td>\n",
              "      <td>True</td>\n",
              "      <td>100830.0</td>\n",
              "      <td>3.7223</td>\n",
              "      <td>9.6407</td>\n",
              "      <td>CHN</td>\n",
              "      <td>179</td>\n",
              "      <td>5.55</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>96 rows × 12 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3a8a2157-d40c-4a17-a29f-44d75938ecda')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3a8a2157-d40c-4a17-a29f-44d75938ecda button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3a8a2157-d40c-4a17-a29f-44d75938ecda');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-08e33dd5-e4e5-4c87-ba2f-a5240d377fa2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-08e33dd5-e4e5-4c87-ba2f-a5240d377fa2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-08e33dd5-e4e5-4c87-ba2f-a5240d377fa2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_25fd5dd5-1415-4791-af96-bef4e9fed11c\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_25fd5dd5-1415-4791-af96-bef4e9fed11c button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 96,\n  \"fields\": [\n    {\n      \"column\": \"pollution_2023\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 208337614,\n        \"min\": 375318,\n        \"max\": 1428627663,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          3728282,\n          5056935,\n          5545475\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.013353505512138725,\n        \"min\": -0.07448,\n        \"max\": 0.0498,\n        \"num_unique_values\": 95,\n        \"samples\": [\n          0.01579,\n          0.00869,\n          0.02689\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 96,\n        \"samples\": [\n          \"Georgia\",\n          \"Ireland\",\n          \"Finland\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ccn3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 251,\n        \"min\": 4,\n        \"max\": 860,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          268,\n          372,\n          246\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Asia\",\n          \"North America\",\n          \"Oceania\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"united_nation_Member\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_land_Area_in_Km\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2518834.9560663244,\n        \"min\": 32.9,\n        \"max\": 16376870.0,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          69490.0,\n          68890.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_density_in_km\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2428.2978284437586,\n        \"min\": 2.2133,\n        \"max\": 21402.7052,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          53.6521,\n          73.4059\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_density_per_Mile\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6289.291375632943,\n        \"min\": 5.7323,\n        \"max\": 55433.0064,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          138.9588,\n          190.1214\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"share_borders\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 83,\n        \"samples\": [\n          \"IRN, JOR, KWT, SAU, SYR, TUR\",\n          \"AFG, BGD, BTN, MMR, CHN, NPL, PAK, LKA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 51,\n        \"min\": 1,\n        \"max\": 179,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          132,\n          125\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mostPollutedCountries_particlePollution\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.478306021878316,\n        \"min\": 3.3,\n        \"max\": 83.3,\n        \"num_unique_values\": 93,\n        \"samples\": [\n          19.36,\n          21.56\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.isna().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "s98VNgGNQuUo",
        "outputId": "d40492c2-7b87-4219-d5cc-91efbc92137c"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pollution_2023                             0\n",
              "pollution_growth_Rate                      0\n",
              "country_name                               0\n",
              "ccn3                                       0\n",
              "country_region                             0\n",
              "united_nation_Member                       0\n",
              "country_land_Area_in_Km                    0\n",
              "pollution_density_in_km                    0\n",
              "pollution_density_per_Mile                 0\n",
              "share_borders                              0\n",
              "pollution_Rank                             0\n",
              "mostPollutedCountries_particlePollution    0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JdTey4aodkBI",
        "outputId": "fe92ca82-7a4f-4d21-f649-09a950b17d93"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pollution_2023                               int64\n",
              "pollution_growth_Rate                      float64\n",
              "country_name                                object\n",
              "ccn3                                         int64\n",
              "country_region                              object\n",
              "united_nation_Member                          bool\n",
              "country_land_Area_in_Km                    float64\n",
              "pollution_density_in_km                    float64\n",
              "pollution_density_per_Mile                 float64\n",
              "share_borders                               object\n",
              "pollution_Rank                               int64\n",
              "mostPollutedCountries_particlePollution    float64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"pollution_growth_Rate\"]=df[\"pollution_growth_Rate\"].round()"
      ],
      "metadata": {
        "id": "0peT4x5uOhOi"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"country_land_Area_in_Km\"]=df[\"country_land_Area_in_Km\"].round()"
      ],
      "metadata": {
        "id": "kzvwX6KiOlo2"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"pollution_density_in_km\"]=df[\"pollution_density_in_km\"].round()"
      ],
      "metadata": {
        "id": "Mi47CNBwOm29"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"pollution_density_per_Mile\"]=df[\"pollution_density_per_Mile\"].round()"
      ],
      "metadata": {
        "id": "MclMsqT2O7R-"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"mostPollutedCountries_particlePollution\"]=df[\"mostPollutedCountries_particlePollution\"].round()"
      ],
      "metadata": {
        "id": "rIM8LbGxO9uh"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import LabelEncoder"
      ],
      "metadata": {
        "id": "g45Ap4KTgoWT"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "bool_encoder= LabelEncoder()\n",
        "df['united_nation_Member'] = bool_encoder.fit_transform(df['united_nation_Member'])"
      ],
      "metadata": {
        "id": "vSOzH64wgpv6"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 582
        },
        "id": "p2hNuux_hCUz",
        "outputId": "78027d97-b3a3-4292-9ee8-ce8debf3ac5d"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    pollution_2023  pollution_growth_Rate   country_name  ccn3 country_region  \\\n",
              "0       1428627663                    0.0          India   356           Asia   \n",
              "1       1425671352                   -0.0          China   156           Asia   \n",
              "2        339996563                    0.0  United States   840  North America   \n",
              "3        277534122                    0.0      Indonesia   360           Asia   \n",
              "4        240485658                    0.0       Pakistan   586           Asia   \n",
              "..             ...                    ...            ...   ...            ...   \n",
              "91          704149                    0.0          Macau   446           Asia   \n",
              "92          654768                    0.0     Luxembourg   442         Europe   \n",
              "93          535064                    0.0          Malta   470         Europe   \n",
              "94          412623                    0.0        Bahamas    44  North America   \n",
              "95          375318                    0.0        Iceland   352         Europe   \n",
              "\n",
              "    united_nation_Member  country_land_Area_in_Km  pollution_density_in_km  \\\n",
              "0                      1                2973190.0                    481.0   \n",
              "1                      1                9424703.0                    151.0   \n",
              "2                      1                9147420.0                     37.0   \n",
              "3                      1                1877519.0                    148.0   \n",
              "4                      1                 770880.0                    312.0   \n",
              "..                   ...                      ...                      ...   \n",
              "91                     0                     33.0                  21403.0   \n",
              "92                     1                   2574.0                    254.0   \n",
              "93                     1                    320.0                   1672.0   \n",
              "94                     1                  10010.0                     41.0   \n",
              "95                     1                 100830.0                      4.0   \n",
              "\n",
              "    pollution_density_per_Mile  \\\n",
              "0                       1245.0   \n",
              "1                        392.0   \n",
              "2                         96.0   \n",
              "3                        383.0   \n",
              "4                        808.0   \n",
              "..                         ...   \n",
              "91                     55433.0   \n",
              "92                       659.0   \n",
              "93                      4331.0   \n",
              "94                       107.0   \n",
              "95                        10.0   \n",
              "\n",
              "                                        share_borders  pollution_Rank  \\\n",
              "0              AFG, BGD, BTN, MMR, CHN, NPL, PAK, LKA               1   \n",
              "1   AFG, BTN, MMR, HKG, IND, KAZ, PRK, KGZ, LAO, M...               2   \n",
              "2                                            CAN, MEX               3   \n",
              "3                                       TLS, MYS, PNG               4   \n",
              "4                                  AFG, CHN, IND, IRN               5   \n",
              "..                                                ...             ...   \n",
              "91                                                CHN             167   \n",
              "92                                      BEL, FRA, DEU             168   \n",
              "93                                                CHN             173   \n",
              "94                                                CHN             176   \n",
              "95                                                CHN             179   \n",
              "\n",
              "    mostPollutedCountries_particlePollution  \n",
              "0                                      58.0  \n",
              "1                                      39.0  \n",
              "2                                       9.0  \n",
              "3                                      52.0  \n",
              "4                                      66.0  \n",
              "..                                      ...  \n",
              "91                                     24.0  \n",
              "92                                     10.0  \n",
              "93                                      9.0  \n",
              "94                                      3.0  \n",
              "95                                      6.0  \n",
              "\n",
              "[96 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f2e70b8b-3a9b-4a0a-bdbe-878b95f39a88\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pollution_2023</th>\n",
              "      <th>pollution_growth_Rate</th>\n",
              "      <th>country_name</th>\n",
              "      <th>ccn3</th>\n",
              "      <th>country_region</th>\n",
              "      <th>united_nation_Member</th>\n",
              "      <th>country_land_Area_in_Km</th>\n",
              "      <th>pollution_density_in_km</th>\n",
              "      <th>pollution_density_per_Mile</th>\n",
              "      <th>share_borders</th>\n",
              "      <th>pollution_Rank</th>\n",
              "      <th>mostPollutedCountries_particlePollution</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1428627663</td>\n",
              "      <td>0.0</td>\n",
              "      <td>India</td>\n",
              "      <td>356</td>\n",
              "      <td>Asia</td>\n",
              "      <td>1</td>\n",
              "      <td>2973190.0</td>\n",
              "      <td>481.0</td>\n",
              "      <td>1245.0</td>\n",
              "      <td>AFG, BGD, BTN, MMR, CHN, NPL, PAK, LKA</td>\n",
              "      <td>1</td>\n",
              "      <td>58.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1425671352</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>China</td>\n",
              "      <td>156</td>\n",
              "      <td>Asia</td>\n",
              "      <td>1</td>\n",
              "      <td>9424703.0</td>\n",
              "      <td>151.0</td>\n",
              "      <td>392.0</td>\n",
              "      <td>AFG, BTN, MMR, HKG, IND, KAZ, PRK, KGZ, LAO, M...</td>\n",
              "      <td>2</td>\n",
              "      <td>39.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>339996563</td>\n",
              "      <td>0.0</td>\n",
              "      <td>United States</td>\n",
              "      <td>840</td>\n",
              "      <td>North America</td>\n",
              "      <td>1</td>\n",
              "      <td>9147420.0</td>\n",
              "      <td>37.0</td>\n",
              "      <td>96.0</td>\n",
              "      <td>CAN, MEX</td>\n",
              "      <td>3</td>\n",
              "      <td>9.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>277534122</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Indonesia</td>\n",
              "      <td>360</td>\n",
              "      <td>Asia</td>\n",
              "      <td>1</td>\n",
              "      <td>1877519.0</td>\n",
              "      <td>148.0</td>\n",
              "      <td>383.0</td>\n",
              "      <td>TLS, MYS, PNG</td>\n",
              "      <td>4</td>\n",
              "      <td>52.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>240485658</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Pakistan</td>\n",
              "      <td>586</td>\n",
              "      <td>Asia</td>\n",
              "      <td>1</td>\n",
              "      <td>770880.0</td>\n",
              "      <td>312.0</td>\n",
              "      <td>808.0</td>\n",
              "      <td>AFG, CHN, IND, IRN</td>\n",
              "      <td>5</td>\n",
              "      <td>66.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>704149</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Macau</td>\n",
              "      <td>446</td>\n",
              "      <td>Asia</td>\n",
              "      <td>0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>21403.0</td>\n",
              "      <td>55433.0</td>\n",
              "      <td>CHN</td>\n",
              "      <td>167</td>\n",
              "      <td>24.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>654768</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Luxembourg</td>\n",
              "      <td>442</td>\n",
              "      <td>Europe</td>\n",
              "      <td>1</td>\n",
              "      <td>2574.0</td>\n",
              "      <td>254.0</td>\n",
              "      <td>659.0</td>\n",
              "      <td>BEL, FRA, DEU</td>\n",
              "      <td>168</td>\n",
              "      <td>10.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>535064</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Malta</td>\n",
              "      <td>470</td>\n",
              "      <td>Europe</td>\n",
              "      <td>1</td>\n",
              "      <td>320.0</td>\n",
              "      <td>1672.0</td>\n",
              "      <td>4331.0</td>\n",
              "      <td>CHN</td>\n",
              "      <td>173</td>\n",
              "      <td>9.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>412623</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Bahamas</td>\n",
              "      <td>44</td>\n",
              "      <td>North America</td>\n",
              "      <td>1</td>\n",
              "      <td>10010.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>107.0</td>\n",
              "      <td>CHN</td>\n",
              "      <td>176</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>375318</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Iceland</td>\n",
              "      <td>352</td>\n",
              "      <td>Europe</td>\n",
              "      <td>1</td>\n",
              "      <td>100830.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>CHN</td>\n",
              "      <td>179</td>\n",
              "      <td>6.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>96 rows × 12 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2e70b8b-3a9b-4a0a-bdbe-878b95f39a88')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f2e70b8b-3a9b-4a0a-bdbe-878b95f39a88 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f2e70b8b-3a9b-4a0a-bdbe-878b95f39a88');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-38b77d2a-d95e-472e-b7e3-ad882bbc4167\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-38b77d2a-d95e-472e-b7e3-ad882bbc4167')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-38b77d2a-d95e-472e-b7e3-ad882bbc4167 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_75f3b57c-8217-4478-afa5-319d6fcfbbb0\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_75f3b57c-8217-4478-afa5-319d6fcfbbb0 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 96,\n  \"fields\": [\n    {\n      \"column\": \"pollution_2023\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 208337614,\n        \"min\": 375318,\n        \"max\": 1428627663,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          3728282,\n          5056935,\n          5545475\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_growth_Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 96,\n        \"samples\": [\n          \"Georgia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ccn3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 251,\n        \"min\": 4,\n        \"max\": 860,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          268\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_region\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Asia\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"united_nation_Member\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country_land_Area_in_Km\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2518834.9597449712,\n        \"min\": 33.0,\n        \"max\": 16376870.0,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          69490.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_density_in_km\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2428.3284078024435,\n        \"min\": 2.0,\n        \"max\": 21403.0,\n        \"num_unique_values\": 82,\n        \"samples\": [\n          19.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_density_per_Mile\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6289.295518940209,\n        \"min\": 6.0,\n        \"max\": 55433.0,\n        \"num_unique_values\": 89,\n        \"samples\": [\n          1712.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"share_borders\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 83,\n        \"samples\": [\n          \"IRN, JOR, KWT, SAU, SYR, TUR\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pollution_Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 51,\n        \"min\": 1,\n        \"max\": 179,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          132\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mostPollutedCountries_particlePollution\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.444323689328805,\n        \"min\": 3.0,\n        \"max\": 83.0,\n        \"num_unique_values\": 41,\n        \"samples\": [\n          19.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dummy=pd.get_dummies(df[['country_name','country_region','share_borders']],drop_first=True)\n",
        "dummy"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 478
        },
        "id": "9Ae_y8kMy7gJ",
        "outputId": "c1822619-0c5c-491a-e8a1-b19adfb02c06"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    country_name_Algeria  country_name_Angola  country_name_Argentina  \\\n",
              "0                      0                    0                       0   \n",
              "1                      0                    0                       0   \n",
              "2                      0                    0                       0   \n",
              "3                      0                    0                       0   \n",
              "4                      0                    0                       0   \n",
              "..                   ...                  ...                     ...   \n",
              "91                     0                    0                       0   \n",
              "92                     0                    0                       0   \n",
              "93                     0                    0                       0   \n",
              "94                     0                    0                       0   \n",
              "95                     0                    0                       0   \n",
              "\n",
              "    country_name_Armenia  country_name_Australia  country_name_Austria  \\\n",
              "0                      0                       0                     0   \n",
              "1                      0                       0                     0   \n",
              "2                      0                       0                     0   \n",
              "3                      0                       0                     0   \n",
              "4                      0                       0                     0   \n",
              "..                   ...                     ...                   ...   \n",
              "91                     0                       0                     0   \n",
              "92                     0                       0                     0   \n",
              "93                     0                       0                     0   \n",
              "94                     0                       0                     0   \n",
              "95                     0                       0                     0   \n",
              "\n",
              "    country_name_Bahamas  country_name_Bahrain  country_name_Bangladesh  \\\n",
              "0                      0                     0                        0   \n",
              "1                      0                     0                        0   \n",
              "2                      0                     0                        0   \n",
              "3                      0                     0                        0   \n",
              "4                      0                     0                        0   \n",
              "..                   ...                   ...                      ...   \n",
              "91                     0                     0                        0   \n",
              "92                     0                     0                        0   \n",
              "93                     0                     0                        0   \n",
              "94                     1                     0                        0   \n",
              "95                     0                     0                        0   \n",
              "\n",
              "    country_name_Belgium  ...  share_borders_MMR, IND  \\\n",
              "0                      0  ...                       0   \n",
              "1                      0  ...                       0   \n",
              "2                      0  ...                       0   \n",
              "3                      0  ...                       0   \n",
              "4                      0  ...                       0   \n",
              "..                   ...  ...                     ...   \n",
              "91                     0  ...                       0   \n",
              "92                     0  ...                       0   \n",
              "93                     0  ...                       0   \n",
              "94                     0  ...                       0   \n",
              "95                     0  ...                       0   \n",
              "\n",
              "    share_borders_MMR, KHM, CHN, THA, VNM  share_borders_MMR, KHM, LAO, MYS  \\\n",
              "0                                       0                                 0   \n",
              "1                                       0                                 0   \n",
              "2                                       0                                 0   \n",
              "3                                       0                                 0   \n",
              "4                                       0                                 0   \n",
              "..                                    ...                               ...   \n",
              "91                                      0                                 0   \n",
              "92                                      0                                 0   \n",
              "93                                      0                                 0   \n",
              "94                                      0                                 0   \n",
              "95                                      0                                 0   \n",
              "\n",
              "    share_borders_NIC, PAN  share_borders_NOR, SWE, RUS  \\\n",
              "0                        0                            0   \n",
              "1                        0                            0   \n",
              "2                        0                            0   \n",
              "3                        0                            0   \n",
              "4                        0                            0   \n",
              "..                     ...                          ...   \n",
              "91                       0                            0   \n",
              "92                       0                            0   \n",
              "93                       0                            0   \n",
              "94                       0                            0   \n",
              "95                       0                            0   \n",
              "\n",
              "    share_borders_OMN, SAU  share_borders_PRK  share_borders_TLS, MYS, PNG  \\\n",
              "0                        0                  0                            0   \n",
              "1                        0                  0                            0   \n",
              "2                        0                  0                            0   \n",
              "3                        0                  0                            1   \n",
              "4                        0                  0                            0   \n",
              "..                     ...                ...                          ...   \n",
              "91                       0                  0                            0   \n",
              "92                       0                  0                            0   \n",
              "93                       0                  0                            0   \n",
              "94                       0                  0                            0   \n",
              "95                       0                  0                            0   \n",
              "\n",
              "    share_borders_TUN, LBY, NER, ESH, MRT, MLI, MAR  share_borders_USA  \n",
              "0                                                 0                  0  \n",
              "1                                                 0                  0  \n",
              "2                                                 0                  0  \n",
              "3                                                 0                  0  \n",
              "4                                                 0                  0  \n",
              "..                                              ...                ...  \n",
              "91                                                0                  0  \n",
              "92                                                0                  0  \n",
              "93                                                0                  0  \n",
              "94                                                0                  0  \n",
              "95                                                0                  0  \n",
              "\n",
              "[96 rows x 182 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ba56b6e7-cd37-4397-9d9c-610f4ccac998\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>country_name_Algeria</th>\n",
              "      <th>country_name_Angola</th>\n",
              "      <th>country_name_Argentina</th>\n",
              "      <th>country_name_Armenia</th>\n",
              "      <th>country_name_Australia</th>\n",
              "      <th>country_name_Austria</th>\n",
              "      <th>country_name_Bahamas</th>\n",
              "      <th>country_name_Bahrain</th>\n",
              "      <th>country_name_Bangladesh</th>\n",
              "      <th>country_name_Belgium</th>\n",
              "      <th>...</th>\n",
              "      <th>share_borders_MMR, IND</th>\n",
              "      <th>share_borders_MMR, KHM, CHN, THA, VNM</th>\n",
              "      <th>share_borders_MMR, KHM, LAO, MYS</th>\n",
              "      <th>share_borders_NIC, PAN</th>\n",
              "      <th>share_borders_NOR, SWE, RUS</th>\n",
              "      <th>share_borders_OMN, SAU</th>\n",
              "      <th>share_borders_PRK</th>\n",
              "      <th>share_borders_TLS, MYS, PNG</th>\n",
              "      <th>share_borders_TUN, LBY, NER, ESH, MRT, MLI, MAR</th>\n",
              "      <th>share_borders_USA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>96 rows × 182 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ba56b6e7-cd37-4397-9d9c-610f4ccac998')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ba56b6e7-cd37-4397-9d9c-610f4ccac998 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ba56b6e7-cd37-4397-9d9c-610f4ccac998');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-c183b389-2981-4ef5-9a73-147d56b4036f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c183b389-2981-4ef5-9a73-147d56b4036f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-c183b389-2981-4ef5-9a73-147d56b4036f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_a0f7eda7-563e-4357-8a85-fa947d082dc5\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('dummy')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_a0f7eda7-563e-4357-8a85-fa947d082dc5 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('dummy');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dummy"
            }
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1=pd.concat([df,dummy],axis=1)\n",
        "df1\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 617
        },
        "id": "tBOSluPR1jQS",
        "outputId": "781580b2-cc5a-4fcb-c0a6-6628460dd89a"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    pollution_2023  pollution_growth_Rate   country_name  ccn3 country_region  \\\n",
              "0       1428627663                    0.0          India   356           Asia   \n",
              "1       1425671352                   -0.0          China   156           Asia   \n",
              "2        339996563                    0.0  United States   840  North America   \n",
              "3        277534122                    0.0      Indonesia   360           Asia   \n",
              "4        240485658                    0.0       Pakistan   586           Asia   \n",
              "..             ...                    ...            ...   ...            ...   \n",
              "91          704149                    0.0          Macau   446           Asia   \n",
              "92          654768                    0.0     Luxembourg   442         Europe   \n",
              "93          535064                    0.0          Malta   470         Europe   \n",
              "94          412623                    0.0        Bahamas    44  North America   \n",
              "95          375318                    0.0        Iceland   352         Europe   \n",
              "\n",
              "    united_nation_Member  country_land_Area_in_Km  pollution_density_in_km  \\\n",
              "0                      1                2973190.0                    481.0   \n",
              "1                      1                9424703.0                    151.0   \n",
              "2                      1                9147420.0                     37.0   \n",
              "3                      1                1877519.0                    148.0   \n",
              "4                      1                 770880.0                    312.0   \n",
              "..                   ...                      ...                      ...   \n",
              "91                     0                     33.0                  21403.0   \n",
              "92                     1                   2574.0                    254.0   \n",
              "93                     1                    320.0                   1672.0   \n",
              "94                     1                  10010.0                     41.0   \n",
              "95                     1                 100830.0                      4.0   \n",
              "\n",
              "    pollution_density_per_Mile  \\\n",
              "0                       1245.0   \n",
              "1                        392.0   \n",
              "2                         96.0   \n",
              "3                        383.0   \n",
              "4                        808.0   \n",
              "..                         ...   \n",
              "91                     55433.0   \n",
              "92                       659.0   \n",
              "93                      4331.0   \n",
              "94                       107.0   \n",
              "95                        10.0   \n",
              "\n",
              "                                        share_borders  ...  \\\n",
              "0              AFG, BGD, BTN, MMR, CHN, NPL, PAK, LKA  ...   \n",
              "1   AFG, BTN, MMR, HKG, IND, KAZ, PRK, KGZ, LAO, M...  ...   \n",
              "2                                            CAN, MEX  ...   \n",
              "3                                       TLS, MYS, PNG  ...   \n",
              "4                                  AFG, CHN, IND, IRN  ...   \n",
              "..                                                ...  ...   \n",
              "91                                                CHN  ...   \n",
              "92                                      BEL, FRA, DEU  ...   \n",
              "93                                                CHN  ...   \n",
              "94                                                CHN  ...   \n",
              "95                                                CHN  ...   \n",
              "\n",
              "    share_borders_MMR, IND  share_borders_MMR, KHM, CHN, THA, VNM  \\\n",
              "0                        0                                      0   \n",
              "1                        0                                      0   \n",
              "2                        0                                      0   \n",
              "3                        0                                      0   \n",
              "4                        0                                      0   \n",
              "..                     ...                                    ...   \n",
              "91                       0                                      0   \n",
              "92                       0                                      0   \n",
              "93                       0                                      0   \n",
              "94                       0                                      0   \n",
              "95                       0                                      0   \n",
              "\n",
              "    share_borders_MMR, KHM, LAO, MYS  share_borders_NIC, PAN  \\\n",
              "0                                  0                       0   \n",
              "1                                  0                       0   \n",
              "2                                  0                       0   \n",
              "3                                  0                       0   \n",
              "4                                  0                       0   \n",
              "..                               ...                     ...   \n",
              "91                                 0                       0   \n",
              "92                                 0                       0   \n",
              "93                                 0                       0   \n",
              "94                                 0                       0   \n",
              "95                                 0                       0   \n",
              "\n",
              "    share_borders_NOR, SWE, RUS  share_borders_OMN, SAU  share_borders_PRK  \\\n",
              "0                             0                       0                  0   \n",
              "1                             0                       0                  0   \n",
              "2                             0                       0                  0   \n",
              "3                             0                       0                  0   \n",
              "4                             0                       0                  0   \n",
              "..                          ...                     ...                ...   \n",
              "91                            0                       0                  0   \n",
              "92                            0                       0                  0   \n",
              "93                            0                       0                  0   \n",
              "94                            0                       0                  0   \n",
              "95                            0                       0                  0   \n",
              "\n",
              "    share_borders_TLS, MYS, PNG  \\\n",
              "0                             0   \n",
              "1                             0   \n",
              "2                             0   \n",
              "3                             1   \n",
              "4                             0   \n",
              "..                          ...   \n",
              "91                            0   \n",
              "92                            0   \n",
              "93                            0   \n",
              "94                            0   \n",
              "95                            0   \n",
              "\n",
              "    share_borders_TUN, LBY, NER, ESH, MRT, MLI, MAR  share_borders_USA  \n",
              "0                                                 0                  0  \n",
              "1                                                 0                  0  \n",
              "2                                                 0                  0  \n",
              "3                                                 0                  0  \n",
              "4                                                 0                  0  \n",
              "..                                              ...                ...  \n",
              "91                                                0                  0  \n",
              "92                                                0                  0  \n",
              "93                                                0                  0  \n",
              "94                                                0                  0  \n",
              "95                                                0                  0  \n",
              "\n",
              "[96 rows x 194 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ab0f08d7-1eef-43ec-a6db-f9aec01802d7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pollution_2023</th>\n",
              "      <th>pollution_growth_Rate</th>\n",
              "      <th>country_name</th>\n",
              "      <th>ccn3</th>\n",
              "      <th>country_region</th>\n",
              "      <th>united_nation_Member</th>\n",
              "      <th>country_land_Area_in_Km</th>\n",
              "      <th>pollution_density_in_km</th>\n",
              "      <th>pollution_density_per_Mile</th>\n",
              "      <th>share_borders</th>\n",
              "      <th>...</th>\n",
              "      <th>share_borders_MMR, IND</th>\n",
              "      <th>share_borders_MMR, KHM, CHN, THA, VNM</th>\n",
              "      <th>share_borders_MMR, KHM, LAO, MYS</th>\n",
              "      <th>share_borders_NIC, PAN</th>\n",
              "      <th>share_borders_NOR, SWE, RUS</th>\n",
              "      <th>share_borders_OMN, SAU</th>\n",
              "      <th>share_borders_PRK</th>\n",
              "      <th>share_borders_TLS, MYS, PNG</th>\n",
              "      <th>share_borders_TUN, LBY, NER, ESH, MRT, MLI, MAR</th>\n",
              "      <th>share_borders_USA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1428627663</td>\n",
              "      <td>0.0</td>\n",
              "      <td>India</td>\n",
              "      <td>356</td>\n",
              "      <td>Asia</td>\n",
              "      <td>1</td>\n",
              "      <td>2973190.0</td>\n",
              "      <td>481.0</td>\n",
              "      <td>1245.0</td>\n",
              "      <td>AFG, BGD, BTN, MMR, CHN, NPL, PAK, LKA</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1425671352</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>China</td>\n",
              "      <td>156</td>\n",
              "      <td>Asia</td>\n",
              "      <td>1</td>\n",
              "      <td>9424703.0</td>\n",
              "      <td>151.0</td>\n",
              "      <td>392.0</td>\n",
              "      <td>AFG, BTN, MMR, HKG, IND, KAZ, PRK, KGZ, LAO, M...</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>339996563</td>\n",
              "      <td>0.0</td>\n",
              "      <td>United States</td>\n",
              "      <td>840</td>\n",
              "      <td>North America</td>\n",
              "      <td>1</td>\n",
              "      <td>9147420.0</td>\n",
              "      <td>37.0</td>\n",
              "      <td>96.0</td>\n",
              "      <td>CAN, MEX</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>277534122</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Indonesia</td>\n",
              "      <td>360</td>\n",
              "      <td>Asia</td>\n",
              "      <td>1</td>\n",
              "      <td>1877519.0</td>\n",
              "      <td>148.0</td>\n",
              "      <td>383.0</td>\n",
              "      <td>TLS, MYS, PNG</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>240485658</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Pakistan</td>\n",
              "      <td>586</td>\n",
              "      <td>Asia</td>\n",
              "      <td>1</td>\n",
              "      <td>770880.0</td>\n",
              "      <td>312.0</td>\n",
              "      <td>808.0</td>\n",
              "      <td>AFG, CHN, IND, IRN</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>704149</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Macau</td>\n",
              "      <td>446</td>\n",
              "      <td>Asia</td>\n",
              "      <td>0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>21403.0</td>\n",
              "      <td>55433.0</td>\n",
              "      <td>CHN</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>654768</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Luxembourg</td>\n",
              "      <td>442</td>\n",
              "      <td>Europe</td>\n",
              "      <td>1</td>\n",
              "      <td>2574.0</td>\n",
              "      <td>254.0</td>\n",
              "      <td>659.0</td>\n",
              "      <td>BEL, FRA, DEU</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>535064</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Malta</td>\n",
              "      <td>470</td>\n",
              "      <td>Europe</td>\n",
              "      <td>1</td>\n",
              "      <td>320.0</td>\n",
              "      <td>1672.0</td>\n",
              "      <td>4331.0</td>\n",
              "      <td>CHN</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>412623</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Bahamas</td>\n",
              "      <td>44</td>\n",
              "      <td>North America</td>\n",
              "      <td>1</td>\n",
              "      <td>10010.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>107.0</td>\n",
              "      <td>CHN</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>375318</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Iceland</td>\n",
              "      <td>352</td>\n",
              "      <td>Europe</td>\n",
              "      <td>1</td>\n",
              "      <td>100830.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>CHN</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>96 rows × 194 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ab0f08d7-1eef-43ec-a6db-f9aec01802d7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ab0f08d7-1eef-43ec-a6db-f9aec01802d7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ab0f08d7-1eef-43ec-a6db-f9aec01802d7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d1266617-0185-4ddb-a475-c4c72731cfe5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d1266617-0185-4ddb-a475-c4c72731cfe5')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d1266617-0185-4ddb-a475-c4c72731cfe5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_0136df66-d64c-4acc-b0e8-67216e43be04\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df1')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_0136df66-d64c-4acc-b0e8-67216e43be04 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df1');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df1"
            }
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1=df1.drop(['country_name','country_region','share_borders'],axis=1)\n",
        "df1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 478
        },
        "id": "ctwHQI7F18vx",
        "outputId": "b712e97d-c449-40e1-9f2b-0c2ecdc41482"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    pollution_2023  pollution_growth_Rate  ccn3  united_nation_Member  \\\n",
              "0       1428627663                    0.0   356                     1   \n",
              "1       1425671352                   -0.0   156                     1   \n",
              "2        339996563                    0.0   840                     1   \n",
              "3        277534122                    0.0   360                     1   \n",
              "4        240485658                    0.0   586                     1   \n",
              "..             ...                    ...   ...                   ...   \n",
              "91          704149                    0.0   446                     0   \n",
              "92          654768                    0.0   442                     1   \n",
              "93          535064                    0.0   470                     1   \n",
              "94          412623                    0.0    44                     1   \n",
              "95          375318                    0.0   352                     1   \n",
              "\n",
              "    country_land_Area_in_Km  pollution_density_in_km  \\\n",
              "0                 2973190.0                    481.0   \n",
              "1                 9424703.0                    151.0   \n",
              "2                 9147420.0                     37.0   \n",
              "3                 1877519.0                    148.0   \n",
              "4                  770880.0                    312.0   \n",
              "..                      ...                      ...   \n",
              "91                     33.0                  21403.0   \n",
              "92                   2574.0                    254.0   \n",
              "93                    320.0                   1672.0   \n",
              "94                  10010.0                     41.0   \n",
              "95                 100830.0                      4.0   \n",
              "\n",
              "    pollution_density_per_Mile  pollution_Rank  \\\n",
              "0                       1245.0               1   \n",
              "1                        392.0               2   \n",
              "2                         96.0               3   \n",
              "3                        383.0               4   \n",
              "4                        808.0               5   \n",
              "..                         ...             ...   \n",
              "91                     55433.0             167   \n",
              "92                       659.0             168   \n",
              "93                      4331.0             173   \n",
              "94                       107.0             176   \n",
              "95                        10.0             179   \n",
              "\n",
              "    mostPollutedCountries_particlePollution  country_name_Algeria  ...  \\\n",
              "0                                      58.0                     0  ...   \n",
              "1                                      39.0                     0  ...   \n",
              "2                                       9.0                     0  ...   \n",
              "3                                      52.0                     0  ...   \n",
              "4                                      66.0                     0  ...   \n",
              "..                                      ...                   ...  ...   \n",
              "91                                     24.0                     0  ...   \n",
              "92                                     10.0                     0  ...   \n",
              "93                                      9.0                     0  ...   \n",
              "94                                      3.0                     0  ...   \n",
              "95                                      6.0                     0  ...   \n",
              "\n",
              "    share_borders_MMR, IND  share_borders_MMR, KHM, CHN, THA, VNM  \\\n",
              "0                        0                                      0   \n",
              "1                        0                                      0   \n",
              "2                        0                                      0   \n",
              "3                        0                                      0   \n",
              "4                        0                                      0   \n",
              "..                     ...                                    ...   \n",
              "91                       0                                      0   \n",
              "92                       0                                      0   \n",
              "93                       0                                      0   \n",
              "94                       0                                      0   \n",
              "95                       0                                      0   \n",
              "\n",
              "    share_borders_MMR, KHM, LAO, MYS  share_borders_NIC, PAN  \\\n",
              "0                                  0                       0   \n",
              "1                                  0                       0   \n",
              "2                                  0                       0   \n",
              "3                                  0                       0   \n",
              "4                                  0                       0   \n",
              "..                               ...                     ...   \n",
              "91                                 0                       0   \n",
              "92                                 0                       0   \n",
              "93                                 0                       0   \n",
              "94                                 0                       0   \n",
              "95                                 0                       0   \n",
              "\n",
              "    share_borders_NOR, SWE, RUS  share_borders_OMN, SAU  share_borders_PRK  \\\n",
              "0                             0                       0                  0   \n",
              "1                             0                       0                  0   \n",
              "2                             0                       0                  0   \n",
              "3                             0                       0                  0   \n",
              "4                             0                       0                  0   \n",
              "..                          ...                     ...                ...   \n",
              "91                            0                       0                  0   \n",
              "92                            0                       0                  0   \n",
              "93                            0                       0                  0   \n",
              "94                            0                       0                  0   \n",
              "95                            0                       0                  0   \n",
              "\n",
              "    share_borders_TLS, MYS, PNG  \\\n",
              "0                             0   \n",
              "1                             0   \n",
              "2                             0   \n",
              "3                             1   \n",
              "4                             0   \n",
              "..                          ...   \n",
              "91                            0   \n",
              "92                            0   \n",
              "93                            0   \n",
              "94                            0   \n",
              "95                            0   \n",
              "\n",
              "    share_borders_TUN, LBY, NER, ESH, MRT, MLI, MAR  share_borders_USA  \n",
              "0                                                 0                  0  \n",
              "1                                                 0                  0  \n",
              "2                                                 0                  0  \n",
              "3                                                 0                  0  \n",
              "4                                                 0                  0  \n",
              "..                                              ...                ...  \n",
              "91                                                0                  0  \n",
              "92                                                0                  0  \n",
              "93                                                0                  0  \n",
              "94                                                0                  0  \n",
              "95                                                0                  0  \n",
              "\n",
              "[96 rows x 191 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f41ebd92-b96f-4b0c-a313-0426d72b6ba3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pollution_2023</th>\n",
              "      <th>pollution_growth_Rate</th>\n",
              "      <th>ccn3</th>\n",
              "      <th>united_nation_Member</th>\n",
              "      <th>country_land_Area_in_Km</th>\n",
              "      <th>pollution_density_in_km</th>\n",
              "      <th>pollution_density_per_Mile</th>\n",
              "      <th>pollution_Rank</th>\n",
              "      <th>mostPollutedCountries_particlePollution</th>\n",
              "      <th>country_name_Algeria</th>\n",
              "      <th>...</th>\n",
              "      <th>share_borders_MMR, IND</th>\n",
              "      <th>share_borders_MMR, KHM, CHN, THA, VNM</th>\n",
              "      <th>share_borders_MMR, KHM, LAO, MYS</th>\n",
              "      <th>share_borders_NIC, PAN</th>\n",
              "      <th>share_borders_NOR, SWE, RUS</th>\n",
              "      <th>share_borders_OMN, SAU</th>\n",
              "      <th>share_borders_PRK</th>\n",
              "      <th>share_borders_TLS, MYS, PNG</th>\n",
              "      <th>share_borders_TUN, LBY, NER, ESH, MRT, MLI, MAR</th>\n",
              "      <th>share_borders_USA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1428627663</td>\n",
              "      <td>0.0</td>\n",
              "      <td>356</td>\n",
              "      <td>1</td>\n",
              "      <td>2973190.0</td>\n",
              "      <td>481.0</td>\n",
              "      <td>1245.0</td>\n",
              "      <td>1</td>\n",
              "      <td>58.0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1425671352</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>156</td>\n",
              "      <td>1</td>\n",
              "      <td>9424703.0</td>\n",
              "      <td>151.0</td>\n",
              "      <td>392.0</td>\n",
              "      <td>2</td>\n",
              "      <td>39.0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>339996563</td>\n",
              "      <td>0.0</td>\n",
              "      <td>840</td>\n",
              "      <td>1</td>\n",
              "      <td>9147420.0</td>\n",
              "      <td>37.0</td>\n",
              "      <td>96.0</td>\n",
              "      <td>3</td>\n",
              "      <td>9.0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>277534122</td>\n",
              "      <td>0.0</td>\n",
              "      <td>360</td>\n",
              "      <td>1</td>\n",
              "      <td>1877519.0</td>\n",
              "      <td>148.0</td>\n",
              "      <td>383.0</td>\n",
              "      <td>4</td>\n",
              "      <td>52.0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>240485658</td>\n",
              "      <td>0.0</td>\n",
              "      <td>586</td>\n",
              "      <td>1</td>\n",
              "      <td>770880.0</td>\n",
              "      <td>312.0</td>\n",
              "      <td>808.0</td>\n",
              "      <td>5</td>\n",
              "      <td>66.0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>704149</td>\n",
              "      <td>0.0</td>\n",
              "      <td>446</td>\n",
              "      <td>0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>21403.0</td>\n",
              "      <td>55433.0</td>\n",
              "      <td>167</td>\n",
              "      <td>24.0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>654768</td>\n",
              "      <td>0.0</td>\n",
              "      <td>442</td>\n",
              "      <td>1</td>\n",
              "      <td>2574.0</td>\n",
              "      <td>254.0</td>\n",
              "      <td>659.0</td>\n",
              "      <td>168</td>\n",
              "      <td>10.0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>535064</td>\n",
              "      <td>0.0</td>\n",
              "      <td>470</td>\n",
              "      <td>1</td>\n",
              "      <td>320.0</td>\n",
              "      <td>1672.0</td>\n",
              "      <td>4331.0</td>\n",
              "      <td>173</td>\n",
              "      <td>9.0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>412623</td>\n",
              "      <td>0.0</td>\n",
              "      <td>44</td>\n",
              "      <td>1</td>\n",
              "      <td>10010.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>107.0</td>\n",
              "      <td>176</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>375318</td>\n",
              "      <td>0.0</td>\n",
              "      <td>352</td>\n",
              "      <td>1</td>\n",
              "      <td>100830.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>179</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>96 rows × 191 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f41ebd92-b96f-4b0c-a313-0426d72b6ba3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f41ebd92-b96f-4b0c-a313-0426d72b6ba3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f41ebd92-b96f-4b0c-a313-0426d72b6ba3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-56688268-40da-4924-9dee-a0ba6492848a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-56688268-40da-4924-9dee-a0ba6492848a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-56688268-40da-4924-9dee-a0ba6492848a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_4abcb342-3e6a-44ab-963d-93461d9c3bb2\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df1')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_4abcb342-3e6a-44ab-963d-93461d9c3bb2 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df1');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df1"
            }
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "o45ik2iBODDP",
        "outputId": "779a86bc-fbc9-4df0-c8ca-c75d87a215f9"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pollution_2023                                       int64\n",
              "pollution_growth_Rate                              float64\n",
              "ccn3                                                 int64\n",
              "united_nation_Member                                 int64\n",
              "country_land_Area_in_Km                            float64\n",
              "                                                    ...   \n",
              "share_borders_OMN, SAU                               uint8\n",
              "share_borders_PRK                                    uint8\n",
              "share_borders_TLS, MYS, PNG                          uint8\n",
              "share_borders_TUN, LBY, NER, ESH, MRT, MLI, MAR      uint8\n",
              "share_borders_USA                                    uint8\n",
              "Length: 191, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=df1.drop([\"mostPollutedCountries_particlePollution\"],axis=1)\n",
        "x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 478
        },
        "id": "ZTdFOjU0OOWA",
        "outputId": "836aac13-cb90-46d8-b2a2-b76a91289d46"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    pollution_2023  pollution_growth_Rate  ccn3  united_nation_Member  \\\n",
              "0       1428627663                    0.0   356                     1   \n",
              "1       1425671352                   -0.0   156                     1   \n",
              "2        339996563                    0.0   840                     1   \n",
              "3        277534122                    0.0   360                     1   \n",
              "4        240485658                    0.0   586                     1   \n",
              "..             ...                    ...   ...                   ...   \n",
              "91          704149                    0.0   446                     0   \n",
              "92          654768                    0.0   442                     1   \n",
              "93          535064                    0.0   470                     1   \n",
              "94          412623                    0.0    44                     1   \n",
              "95          375318                    0.0   352                     1   \n",
              "\n",
              "    country_land_Area_in_Km  pollution_density_in_km  \\\n",
              "0                 2973190.0                    481.0   \n",
              "1                 9424703.0                    151.0   \n",
              "2                 9147420.0                     37.0   \n",
              "3                 1877519.0                    148.0   \n",
              "4                  770880.0                    312.0   \n",
              "..                      ...                      ...   \n",
              "91                     33.0                  21403.0   \n",
              "92                   2574.0                    254.0   \n",
              "93                    320.0                   1672.0   \n",
              "94                  10010.0                     41.0   \n",
              "95                 100830.0                      4.0   \n",
              "\n",
              "    pollution_density_per_Mile  pollution_Rank  country_name_Algeria  \\\n",
              "0                       1245.0               1                     0   \n",
              "1                        392.0               2                     0   \n",
              "2                         96.0               3                     0   \n",
              "3                        383.0               4                     0   \n",
              "4                        808.0               5                     0   \n",
              "..                         ...             ...                   ...   \n",
              "91                     55433.0             167                     0   \n",
              "92                       659.0             168                     0   \n",
              "93                      4331.0             173                     0   \n",
              "94                       107.0             176                     0   \n",
              "95                        10.0             179                     0   \n",
              "\n",
              "    country_name_Angola  ...  share_borders_MMR, IND  \\\n",
              "0                     0  ...                       0   \n",
              "1                     0  ...                       0   \n",
              "2                     0  ...                       0   \n",
              "3                     0  ...                       0   \n",
              "4                     0  ...                       0   \n",
              "..                  ...  ...                     ...   \n",
              "91                    0  ...                       0   \n",
              "92                    0  ...                       0   \n",
              "93                    0  ...                       0   \n",
              "94                    0  ...                       0   \n",
              "95                    0  ...                       0   \n",
              "\n",
              "    share_borders_MMR, KHM, CHN, THA, VNM  share_borders_MMR, KHM, LAO, MYS  \\\n",
              "0                                       0                                 0   \n",
              "1                                       0                                 0   \n",
              "2                                       0                                 0   \n",
              "3                                       0                                 0   \n",
              "4                                       0                                 0   \n",
              "..                                    ...                               ...   \n",
              "91                                      0                                 0   \n",
              "92                                      0                                 0   \n",
              "93                                      0                                 0   \n",
              "94                                      0                                 0   \n",
              "95                                      0                                 0   \n",
              "\n",
              "    share_borders_NIC, PAN  share_borders_NOR, SWE, RUS  \\\n",
              "0                        0                            0   \n",
              "1                        0                            0   \n",
              "2                        0                            0   \n",
              "3                        0                            0   \n",
              "4                        0                            0   \n",
              "..                     ...                          ...   \n",
              "91                       0                            0   \n",
              "92                       0                            0   \n",
              "93                       0                            0   \n",
              "94                       0                            0   \n",
              "95                       0                            0   \n",
              "\n",
              "    share_borders_OMN, SAU  share_borders_PRK  share_borders_TLS, MYS, PNG  \\\n",
              "0                        0                  0                            0   \n",
              "1                        0                  0                            0   \n",
              "2                        0                  0                            0   \n",
              "3                        0                  0                            1   \n",
              "4                        0                  0                            0   \n",
              "..                     ...                ...                          ...   \n",
              "91                       0                  0                            0   \n",
              "92                       0                  0                            0   \n",
              "93                       0                  0                            0   \n",
              "94                       0                  0                            0   \n",
              "95                       0                  0                            0   \n",
              "\n",
              "    share_borders_TUN, LBY, NER, ESH, MRT, MLI, MAR  share_borders_USA  \n",
              "0                                                 0                  0  \n",
              "1                                                 0                  0  \n",
              "2                                                 0                  0  \n",
              "3                                                 0                  0  \n",
              "4                                                 0                  0  \n",
              "..                                              ...                ...  \n",
              "91                                                0                  0  \n",
              "92                                                0                  0  \n",
              "93                                                0                  0  \n",
              "94                                                0                  0  \n",
              "95                                                0                  0  \n",
              "\n",
              "[96 rows x 190 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-82931fe8-3ae7-4f1c-b39b-d37d46c95a97\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pollution_2023</th>\n",
              "      <th>pollution_growth_Rate</th>\n",
              "      <th>ccn3</th>\n",
              "      <th>united_nation_Member</th>\n",
              "      <th>country_land_Area_in_Km</th>\n",
              "      <th>pollution_density_in_km</th>\n",
              "      <th>pollution_density_per_Mile</th>\n",
              "      <th>pollution_Rank</th>\n",
              "      <th>country_name_Algeria</th>\n",
              "      <th>country_name_Angola</th>\n",
              "      <th>...</th>\n",
              "      <th>share_borders_MMR, IND</th>\n",
              "      <th>share_borders_MMR, KHM, CHN, THA, VNM</th>\n",
              "      <th>share_borders_MMR, KHM, LAO, MYS</th>\n",
              "      <th>share_borders_NIC, PAN</th>\n",
              "      <th>share_borders_NOR, SWE, RUS</th>\n",
              "      <th>share_borders_OMN, SAU</th>\n",
              "      <th>share_borders_PRK</th>\n",
              "      <th>share_borders_TLS, MYS, PNG</th>\n",
              "      <th>share_borders_TUN, LBY, NER, ESH, MRT, MLI, MAR</th>\n",
              "      <th>share_borders_USA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1428627663</td>\n",
              "      <td>0.0</td>\n",
              "      <td>356</td>\n",
              "      <td>1</td>\n",
              "      <td>2973190.0</td>\n",
              "      <td>481.0</td>\n",
              "      <td>1245.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1425671352</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>156</td>\n",
              "      <td>1</td>\n",
              "      <td>9424703.0</td>\n",
              "      <td>151.0</td>\n",
              "      <td>392.0</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>339996563</td>\n",
              "      <td>0.0</td>\n",
              "      <td>840</td>\n",
              "      <td>1</td>\n",
              "      <td>9147420.0</td>\n",
              "      <td>37.0</td>\n",
              "      <td>96.0</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>277534122</td>\n",
              "      <td>0.0</td>\n",
              "      <td>360</td>\n",
              "      <td>1</td>\n",
              "      <td>1877519.0</td>\n",
              "      <td>148.0</td>\n",
              "      <td>383.0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>240485658</td>\n",
              "      <td>0.0</td>\n",
              "      <td>586</td>\n",
              "      <td>1</td>\n",
              "      <td>770880.0</td>\n",
              "      <td>312.0</td>\n",
              "      <td>808.0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>704149</td>\n",
              "      <td>0.0</td>\n",
              "      <td>446</td>\n",
              "      <td>0</td>\n",
              "      <td>33.0</td>\n",
              "      <td>21403.0</td>\n",
              "      <td>55433.0</td>\n",
              "      <td>167</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>654768</td>\n",
              "      <td>0.0</td>\n",
              "      <td>442</td>\n",
              "      <td>1</td>\n",
              "      <td>2574.0</td>\n",
              "      <td>254.0</td>\n",
              "      <td>659.0</td>\n",
              "      <td>168</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>535064</td>\n",
              "      <td>0.0</td>\n",
              "      <td>470</td>\n",
              "      <td>1</td>\n",
              "      <td>320.0</td>\n",
              "      <td>1672.0</td>\n",
              "      <td>4331.0</td>\n",
              "      <td>173</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>412623</td>\n",
              "      <td>0.0</td>\n",
              "      <td>44</td>\n",
              "      <td>1</td>\n",
              "      <td>10010.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>107.0</td>\n",
              "      <td>176</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>375318</td>\n",
              "      <td>0.0</td>\n",
              "      <td>352</td>\n",
              "      <td>1</td>\n",
              "      <td>100830.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>179</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>96 rows × 190 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-82931fe8-3ae7-4f1c-b39b-d37d46c95a97')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-82931fe8-3ae7-4f1c-b39b-d37d46c95a97 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-82931fe8-3ae7-4f1c-b39b-d37d46c95a97');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-346faacc-b4f1-4c5d-bf01-993cbe7e986b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-346faacc-b4f1-4c5d-bf01-993cbe7e986b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-346faacc-b4f1-4c5d-bf01-993cbe7e986b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_7377e447-80ea-4aa3-9b77-378bccfb67c0\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_7377e447-80ea-4aa3-9b77-378bccfb67c0 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('x');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "x"
            }
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y=df1[\"mostPollutedCountries_particlePollution\"]\n",
        "y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7fVG1qFCOjQJ",
        "outputId": "cb5c74ba-4d83-4393-d59d-664bf71456a0"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0     58.0\n",
              "1     39.0\n",
              "2      9.0\n",
              "3     52.0\n",
              "4     66.0\n",
              "      ... \n",
              "91    24.0\n",
              "92    10.0\n",
              "93     9.0\n",
              "94     3.0\n",
              "95     6.0\n",
              "Name: mostPollutedCountries_particlePollution, Length: 96, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=30,random_state=42)\n",
        "x_train"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 478
        },
        "id": "VQ_K-qDsO0CE",
        "outputId": "db4fd24e-eda3-4034-fc86-5053b7518466"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    pollution_2023  pollution_growth_Rate  ccn3  united_nation_Member  \\\n",
              "28        47519628                   -0.0   724                     1   \n",
              "72         5795199                    0.0   703                     1   \n",
              "70         6014723                    0.0   702                     1   \n",
              "5        223804632                    0.0   566                     1   \n",
              "44        23923276                    0.0   158                     0   \n",
              "..             ...                    ...   ...                   ...   \n",
              "60        10156239                    0.0   348                     1   \n",
              "71         5910913                    0.0   208                     1   \n",
              "14       102262808                    0.0   180                     1   \n",
              "92          654768                    0.0   442                     1   \n",
              "51        18092026                    0.0   320                     1   \n",
              "\n",
              "    country_land_Area_in_Km  pollution_density_in_km  \\\n",
              "28                 499557.0                     95.0   \n",
              "72                  49035.0                    118.0   \n",
              "70                    718.0                   8377.0   \n",
              "5                  910770.0                    246.0   \n",
              "44                  36197.0                    661.0   \n",
              "..                      ...                      ...   \n",
              "60                  91260.0                    111.0   \n",
              "71                  40000.0                    148.0   \n",
              "14                2267050.0                     45.0   \n",
              "92                   2574.0                    254.0   \n",
              "51                 107160.0                    169.0   \n",
              "\n",
              "    pollution_density_per_Mile  pollution_Rank  country_name_Algeria  \\\n",
              "28                       246.0              32                     0   \n",
              "72                       306.0             116                     0   \n",
              "70                     21697.0             114                     0   \n",
              "5                        636.0               6                     0   \n",
              "44                      1712.0              57                     0   \n",
              "..                         ...             ...                   ...   \n",
              "60                       288.0              94                     0   \n",
              "71                       383.0             115                     0   \n",
              "14                       117.0              15                     0   \n",
              "92                       659.0             168                     0   \n",
              "51                       437.0              70                     0   \n",
              "\n",
              "    country_name_Angola  ...  share_borders_MMR, IND  \\\n",
              "28                    0  ...                       0   \n",
              "72                    0  ...                       0   \n",
              "70                    0  ...                       0   \n",
              "5                     0  ...                       0   \n",
              "44                    0  ...                       0   \n",
              "..                  ...  ...                     ...   \n",
              "60                    0  ...                       0   \n",
              "71                    0  ...                       0   \n",
              "14                    0  ...                       0   \n",
              "92                    0  ...                       0   \n",
              "51                    0  ...                       0   \n",
              "\n",
              "    share_borders_MMR, KHM, CHN, THA, VNM  share_borders_MMR, KHM, LAO, MYS  \\\n",
              "28                                      0                                 0   \n",
              "72                                      0                                 0   \n",
              "70                                      0                                 0   \n",
              "5                                       0                                 0   \n",
              "44                                      0                                 0   \n",
              "..                                    ...                               ...   \n",
              "60                                      0                                 0   \n",
              "71                                      0                                 0   \n",
              "14                                      0                                 0   \n",
              "92                                      0                                 0   \n",
              "51                                      0                                 0   \n",
              "\n",
              "    share_borders_NIC, PAN  share_borders_NOR, SWE, RUS  \\\n",
              "28                       0                            0   \n",
              "72                       0                            0   \n",
              "70                       0                            0   \n",
              "5                        0                            0   \n",
              "44                       0                            0   \n",
              "..                     ...                          ...   \n",
              "60                       0                            0   \n",
              "71                       0                            0   \n",
              "14                       0                            0   \n",
              "92                       0                            0   \n",
              "51                       0                            0   \n",
              "\n",
              "    share_borders_OMN, SAU  share_borders_PRK  share_borders_TLS, MYS, PNG  \\\n",
              "28                       0                  0                            0   \n",
              "72                       0                  0                            0   \n",
              "70                       0                  0                            0   \n",
              "5                        0                  0                            0   \n",
              "44                       0                  0                            0   \n",
              "..                     ...                ...                          ...   \n",
              "60                       0                  0                            0   \n",
              "71                       0                  0                            0   \n",
              "14                       0                  0                            0   \n",
              "92                       0                  0                            0   \n",
              "51                       0                  0                            0   \n",
              "\n",
              "    share_borders_TUN, LBY, NER, ESH, MRT, MLI, MAR  share_borders_USA  \n",
              "28                                                0                  0  \n",
              "72                                                0                  0  \n",
              "70                                                0                  0  \n",
              "5                                                 0                  0  \n",
              "44                                                0                  0  \n",
              "..                                              ...                ...  \n",
              "60                                                0                  0  \n",
              "71                                                0                  0  \n",
              "14                                                0                  0  \n",
              "92                                                0                  0  \n",
              "51                                                0                  0  \n",
              "\n",
              "[66 rows x 190 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e3c753d2-da06-49fd-86ed-66e8569f0e02\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pollution_2023</th>\n",
              "      <th>pollution_growth_Rate</th>\n",
              "      <th>ccn3</th>\n",
              "      <th>united_nation_Member</th>\n",
              "      <th>country_land_Area_in_Km</th>\n",
              "      <th>pollution_density_in_km</th>\n",
              "      <th>pollution_density_per_Mile</th>\n",
              "      <th>pollution_Rank</th>\n",
              "      <th>country_name_Algeria</th>\n",
              "      <th>country_name_Angola</th>\n",
              "      <th>...</th>\n",
              "      <th>share_borders_MMR, IND</th>\n",
              "      <th>share_borders_MMR, KHM, CHN, THA, VNM</th>\n",
              "      <th>share_borders_MMR, KHM, LAO, MYS</th>\n",
              "      <th>share_borders_NIC, PAN</th>\n",
              "      <th>share_borders_NOR, SWE, RUS</th>\n",
              "      <th>share_borders_OMN, SAU</th>\n",
              "      <th>share_borders_PRK</th>\n",
              "      <th>share_borders_TLS, MYS, PNG</th>\n",
              "      <th>share_borders_TUN, LBY, NER, ESH, MRT, MLI, MAR</th>\n",
              "      <th>share_borders_USA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>47519628</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>724</td>\n",
              "      <td>1</td>\n",
              "      <td>499557.0</td>\n",
              "      <td>95.0</td>\n",
              "      <td>246.0</td>\n",
              "      <td>32</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>72</th>\n",
              "      <td>5795199</td>\n",
              "      <td>0.0</td>\n",
              "      <td>703</td>\n",
              "      <td>1</td>\n",
              "      <td>49035.0</td>\n",
              "      <td>118.0</td>\n",
              "      <td>306.0</td>\n",
              "      <td>116</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>70</th>\n",
              "      <td>6014723</td>\n",
              "      <td>0.0</td>\n",
              "      <td>702</td>\n",
              "      <td>1</td>\n",
              "      <td>718.0</td>\n",
              "      <td>8377.0</td>\n",
              "      <td>21697.0</td>\n",
              "      <td>114</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>223804632</td>\n",
              "      <td>0.0</td>\n",
              "      <td>566</td>\n",
              "      <td>1</td>\n",
              "      <td>910770.0</td>\n",
              "      <td>246.0</td>\n",
              "      <td>636.0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>23923276</td>\n",
              "      <td>0.0</td>\n",
              "      <td>158</td>\n",
              "      <td>0</td>\n",
              "      <td>36197.0</td>\n",
              "      <td>661.0</td>\n",
              "      <td>1712.0</td>\n",
              "      <td>57</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>10156239</td>\n",
              "      <td>0.0</td>\n",
              "      <td>348</td>\n",
              "      <td>1</td>\n",
              "      <td>91260.0</td>\n",
              "      <td>111.0</td>\n",
              "      <td>288.0</td>\n",
              "      <td>94</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71</th>\n",
              "      <td>5910913</td>\n",
              "      <td>0.0</td>\n",
              "      <td>208</td>\n",
              "      <td>1</td>\n",
              "      <td>40000.0</td>\n",
              "      <td>148.0</td>\n",
              "      <td>383.0</td>\n",
              "      <td>115</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>102262808</td>\n",
              "      <td>0.0</td>\n",
              "      <td>180</td>\n",
              "      <td>1</td>\n",
              "      <td>2267050.0</td>\n",
              "      <td>45.0</td>\n",
              "      <td>117.0</td>\n",
              "      <td>15</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>654768</td>\n",
              "      <td>0.0</td>\n",
              "      <td>442</td>\n",
              "      <td>1</td>\n",
              "      <td>2574.0</td>\n",
              "      <td>254.0</td>\n",
              "      <td>659.0</td>\n",
              "      <td>168</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>18092026</td>\n",
              "      <td>0.0</td>\n",
              "      <td>320</td>\n",
              "      <td>1</td>\n",
              "      <td>107160.0</td>\n",
              "      <td>169.0</td>\n",
              "      <td>437.0</td>\n",
              "      <td>70</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>66 rows × 190 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3c753d2-da06-49fd-86ed-66e8569f0e02')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e3c753d2-da06-49fd-86ed-66e8569f0e02 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e3c753d2-da06-49fd-86ed-66e8569f0e02');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8b686519-58c7-49d3-a2b5-c3a5f63ef5b4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8b686519-58c7-49d3-a2b5-c3a5f63ef5b4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8b686519-58c7-49d3-a2b5-c3a5f63ef5b4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_3eb69dfc-0e93-47ef-ad8b-90775dc562d6\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x_train')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_3eb69dfc-0e93-47ef-ad8b-90775dc562d6 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('x_train');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "x_train"
            }
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "FdnYetmpPMUY",
        "outputId": "0feea82a-6ea1-437e-c1fc-2e77c0e84b7b"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    pollution_2023  pollution_growth_Rate  ccn3  united_nation_Member  \\\n",
              "80         3728282                   -0.0   268                     1   \n",
              "77         5056935                    0.0   372                     1   \n",
              "73         5545475                    0.0   246                     1   \n",
              "94          412623                    0.0    44                     1   \n",
              "33        41026067                    0.0   616                     1   \n",
              "79         4008617                   -0.0   191                     1   \n",
              "69         6687717                   -0.0   100                     1   \n",
              "42        30896590                    0.0   524                     1   \n",
              "0       1428627663                    0.0   356                     1   \n",
              "10       126527060                    0.0   231                     1   \n",
              "64         8796669                    0.0   756                     1   \n",
              "30        45606480                    0.0    12                     1   \n",
              "18        83294633                   -0.0   276                     1   \n",
              "4        240485658                    0.0   586                     1   \n",
              "31        45504560                    0.0   368                     1   \n",
              "26        51784059                   -0.0   410                     1   \n",
              "12       117337368                    0.0   608                     1   \n",
              "22        60414495                    0.0   710                     1   \n",
              "53        16944826                    0.0   116                     1   \n",
              "85         2718352                   -0.0   440                     1   \n",
              "40        34308525                    0.0   458                     1   \n",
              "67         7149077                   -0.0   688                     1   \n",
              "15        98858950                    0.0   704                     1   \n",
              "68         6735347                    0.0   417                     1   \n",
              "88         1485509                    0.0    48                     1   \n",
              "9        128455567                    0.0   484                     1   \n",
              "39        34352719                    0.0   604                     1   \n",
              "11       123294513                   -0.0   392                     1   \n",
              "45        23227014                    0.0   760                     1   \n",
              "55        11337052                    0.0   400                     1   \n",
              "\n",
              "    country_land_Area_in_Km  pollution_density_in_km  \\\n",
              "80                  69490.0                     54.0   \n",
              "77                  68890.0                     73.0   \n",
              "73                 303940.0                     18.0   \n",
              "94                  10010.0                     41.0   \n",
              "33                 306130.0                    134.0   \n",
              "79                  55960.0                     72.0   \n",
              "69                 108560.0                     62.0   \n",
              "42                 143350.0                    216.0   \n",
              "0                 2973190.0                    481.0   \n",
              "10                1128571.0                    112.0   \n",
              "64                  39516.0                    223.0   \n",
              "30                2381741.0                     19.0   \n",
              "18                 349390.0                    238.0   \n",
              "4                  770880.0                    312.0   \n",
              "31                 434128.0                    105.0   \n",
              "26                  97600.0                    531.0   \n",
              "12                 298170.0                    394.0   \n",
              "22                1213090.0                     50.0   \n",
              "53                 176520.0                     96.0   \n",
              "85                  62620.0                     43.0   \n",
              "40                 328550.0                    104.0   \n",
              "67                  87460.0                     82.0   \n",
              "15                 313429.0                    315.0   \n",
              "68                 191800.0                     35.0   \n",
              "88                    785.0                   1892.0   \n",
              "9                 1943950.0                     66.0   \n",
              "39                1280000.0                     27.0   \n",
              "11                 364500.0                    338.0   \n",
              "45                 183630.0                    126.0   \n",
              "55                  88794.0                    128.0   \n",
              "\n",
              "    pollution_density_per_Mile  pollution_Rank  country_name_Algeria  \\\n",
              "80                       139.0             132                     0   \n",
              "77                       190.0             125                     0   \n",
              "73                        47.0             118                     0   \n",
              "94                       107.0             176                     0   \n",
              "33                       347.0              37                     0   \n",
              "79                       186.0             130                     0   \n",
              "69                       160.0             110                     0   \n",
              "42                       558.0              49                     0   \n",
              "0                       1245.0               1                     0   \n",
              "10                       290.0              11                     0   \n",
              "64                       577.0             101                     0   \n",
              "30                        50.0              34                     1   \n",
              "18                       617.0              19                     0   \n",
              "4                        808.0               5                     0   \n",
              "31                       271.0              35                     0   \n",
              "26                      1374.0              29                     0   \n",
              "12                      1019.0              13                     0   \n",
              "22                       129.0              24                     0   \n",
              "53                       249.0              73                     0   \n",
              "85                       112.0             142                     0   \n",
              "40                       270.0              46                     0   \n",
              "67                       212.0             105                     0   \n",
              "15                       817.0              16                     0   \n",
              "68                        91.0             109                     0   \n",
              "88                      4901.0             154                     0   \n",
              "9                        171.0              10                     0   \n",
              "39                        70.0              45                     0   \n",
              "11                       876.0              12                     0   \n",
              "45                       328.0              60                     0   \n",
              "55                       331.0              83                     0   \n",
              "\n",
              "    country_name_Angola  ...  share_borders_MMR, IND  \\\n",
              "80                    0  ...                       0   \n",
              "77                    0  ...                       0   \n",
              "73                    0  ...                       0   \n",
              "94                    0  ...                       0   \n",
              "33                    0  ...                       0   \n",
              "79                    0  ...                       0   \n",
              "69                    0  ...                       0   \n",
              "42                    0  ...                       0   \n",
              "0                     0  ...                       0   \n",
              "10                    0  ...                       0   \n",
              "64                    0  ...                       0   \n",
              "30                    0  ...                       0   \n",
              "18                    0  ...                       0   \n",
              "4                     0  ...                       0   \n",
              "31                    0  ...                       0   \n",
              "26                    0  ...                       0   \n",
              "12                    0  ...                       0   \n",
              "22                    0  ...                       0   \n",
              "53                    0  ...                       0   \n",
              "85                    0  ...                       0   \n",
              "40                    0  ...                       0   \n",
              "67                    0  ...                       0   \n",
              "15                    0  ...                       0   \n",
              "68                    0  ...                       0   \n",
              "88                    0  ...                       0   \n",
              "9                     0  ...                       0   \n",
              "39                    0  ...                       0   \n",
              "11                    0  ...                       0   \n",
              "45                    0  ...                       0   \n",
              "55                    0  ...                       0   \n",
              "\n",
              "    share_borders_MMR, KHM, CHN, THA, VNM  share_borders_MMR, KHM, LAO, MYS  \\\n",
              "80                                      0                                 0   \n",
              "77                                      0                                 0   \n",
              "73                                      0                                 0   \n",
              "94                                      0                                 0   \n",
              "33                                      0                                 0   \n",
              "79                                      0                                 0   \n",
              "69                                      0                                 0   \n",
              "42                                      0                                 0   \n",
              "0                                       0                                 0   \n",
              "10                                      0                                 0   \n",
              "64                                      0                                 0   \n",
              "30                                      0                                 0   \n",
              "18                                      0                                 0   \n",
              "4                                       0                                 0   \n",
              "31                                      0                                 0   \n",
              "26                                      0                                 0   \n",
              "12                                      0                                 0   \n",
              "22                                      0                                 0   \n",
              "53                                      0                                 0   \n",
              "85                                      0                                 0   \n",
              "40                                      0                                 0   \n",
              "67                                      0                                 0   \n",
              "15                                      0                                 0   \n",
              "68                                      0                                 0   \n",
              "88                                      0                                 0   \n",
              "9                                       0                                 0   \n",
              "39                                      0                                 0   \n",
              "11                                      0                                 0   \n",
              "45                                      0                                 0   \n",
              "55                                      0                                 0   \n",
              "\n",
              "    share_borders_NIC, PAN  share_borders_NOR, SWE, RUS  \\\n",
              "80                       0                            0   \n",
              "77                       0                            0   \n",
              "73                       0                            1   \n",
              "94                       0                            0   \n",
              "33                       0                            0   \n",
              "79                       0                            0   \n",
              "69                       0                            0   \n",
              "42                       0                            0   \n",
              "0                        0                            0   \n",
              "10                       0                            0   \n",
              "64                       0                            0   \n",
              "30                       0                            0   \n",
              "18                       0                            0   \n",
              "4                        0                            0   \n",
              "31                       0                            0   \n",
              "26                       0                            0   \n",
              "12                       0                            0   \n",
              "22                       0                            0   \n",
              "53                       0                            0   \n",
              "85                       0                            0   \n",
              "40                       0                            0   \n",
              "67                       0                            0   \n",
              "15                       0                            0   \n",
              "68                       0                            0   \n",
              "88                       0                            0   \n",
              "9                        0                            0   \n",
              "39                       0                            0   \n",
              "11                       0                            0   \n",
              "45                       0                            0   \n",
              "55                       0                            0   \n",
              "\n",
              "    share_borders_OMN, SAU  share_borders_PRK  share_borders_TLS, MYS, PNG  \\\n",
              "80                       0                  0                            0   \n",
              "77                       0                  0                            0   \n",
              "73                       0                  0                            0   \n",
              "94                       0                  0                            0   \n",
              "33                       0                  0                            0   \n",
              "79                       0                  0                            0   \n",
              "69                       0                  0                            0   \n",
              "42                       0                  0                            0   \n",
              "0                        0                  0                            0   \n",
              "10                       0                  0                            0   \n",
              "64                       0                  0                            0   \n",
              "30                       0                  0                            0   \n",
              "18                       0                  0                            0   \n",
              "4                        0                  0                            0   \n",
              "31                       0                  0                            0   \n",
              "26                       0                  1                            0   \n",
              "12                       0                  0                            0   \n",
              "22                       0                  0                            0   \n",
              "53                       0                  0                            0   \n",
              "85                       0                  0                            0   \n",
              "40                       0                  0                            0   \n",
              "67                       0                  0                            0   \n",
              "15                       0                  0                            0   \n",
              "68                       0                  0                            0   \n",
              "88                       0                  0                            0   \n",
              "9                        0                  0                            0   \n",
              "39                       0                  0                            0   \n",
              "11                       0                  0                            0   \n",
              "45                       0                  0                            0   \n",
              "55                       0                  0                            0   \n",
              "\n",
              "    share_borders_TUN, LBY, NER, ESH, MRT, MLI, MAR  share_borders_USA  \n",
              "80                                                0                  0  \n",
              "77                                                0                  0  \n",
              "73                                                0                  0  \n",
              "94                                                0                  0  \n",
              "33                                                0                  0  \n",
              "79                                                0                  0  \n",
              "69                                                0                  0  \n",
              "42                                                0                  0  \n",
              "0                                                 0                  0  \n",
              "10                                                0                  0  \n",
              "64                                                0                  0  \n",
              "30                                                1                  0  \n",
              "18                                                0                  0  \n",
              "4                                                 0                  0  \n",
              "31                                                0                  0  \n",
              "26                                                0                  0  \n",
              "12                                                0                  0  \n",
              "22                                                0                  0  \n",
              "53                                                0                  0  \n",
              "85                                                0                  0  \n",
              "40                                                0                  0  \n",
              "67                                                0                  0  \n",
              "15                                                0                  0  \n",
              "68                                                0                  0  \n",
              "88                                                0                  0  \n",
              "9                                                 0                  0  \n",
              "39                                                0                  0  \n",
              "11                                                0                  0  \n",
              "45                                                0                  0  \n",
              "55                                                0                  0  \n",
              "\n",
              "[30 rows x 190 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e1e24b4a-2b9e-40b6-811d-89bd30bc2e74\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>pollution_2023</th>\n",
              "      <th>pollution_growth_Rate</th>\n",
              "      <th>ccn3</th>\n",
              "      <th>united_nation_Member</th>\n",
              "      <th>country_land_Area_in_Km</th>\n",
              "      <th>pollution_density_in_km</th>\n",
              "      <th>pollution_density_per_Mile</th>\n",
              "      <th>pollution_Rank</th>\n",
              "      <th>country_name_Algeria</th>\n",
              "      <th>country_name_Angola</th>\n",
              "      <th>...</th>\n",
              "      <th>share_borders_MMR, IND</th>\n",
              "      <th>share_borders_MMR, KHM, CHN, THA, VNM</th>\n",
              "      <th>share_borders_MMR, KHM, LAO, MYS</th>\n",
              "      <th>share_borders_NIC, PAN</th>\n",
              "      <th>share_borders_NOR, SWE, RUS</th>\n",
              "      <th>share_borders_OMN, SAU</th>\n",
              "      <th>share_borders_PRK</th>\n",
              "      <th>share_borders_TLS, MYS, PNG</th>\n",
              "      <th>share_borders_TUN, LBY, NER, ESH, MRT, MLI, MAR</th>\n",
              "      <th>share_borders_USA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>80</th>\n",
              "      <td>3728282</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>268</td>\n",
              "      <td>1</td>\n",
              "      <td>69490.0</td>\n",
              "      <td>54.0</td>\n",
              "      <td>139.0</td>\n",
              "      <td>132</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>5056935</td>\n",
              "      <td>0.0</td>\n",
              "      <td>372</td>\n",
              "      <td>1</td>\n",
              "      <td>68890.0</td>\n",
              "      <td>73.0</td>\n",
              "      <td>190.0</td>\n",
              "      <td>125</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>5545475</td>\n",
              "      <td>0.0</td>\n",
              "      <td>246</td>\n",
              "      <td>1</td>\n",
              "      <td>303940.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>47.0</td>\n",
              "      <td>118</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>412623</td>\n",
              "      <td>0.0</td>\n",
              "      <td>44</td>\n",
              "      <td>1</td>\n",
              "      <td>10010.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>107.0</td>\n",
              "      <td>176</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>41026067</td>\n",
              "      <td>0.0</td>\n",
              "      <td>616</td>\n",
              "      <td>1</td>\n",
              "      <td>306130.0</td>\n",
              "      <td>134.0</td>\n",
              "      <td>347.0</td>\n",
              "      <td>37</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>79</th>\n",
              "      <td>4008617</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>191</td>\n",
              "      <td>1</td>\n",
              "      <td>55960.0</td>\n",
              "      <td>72.0</td>\n",
              "      <td>186.0</td>\n",
              "      <td>130</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69</th>\n",
              "      <td>6687717</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>100</td>\n",
              "      <td>1</td>\n",
              "      <td>108560.0</td>\n",
              "      <td>62.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>110</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>30896590</td>\n",
              "      <td>0.0</td>\n",
              "      <td>524</td>\n",
              "      <td>1</td>\n",
              "      <td>143350.0</td>\n",
              "      <td>216.0</td>\n",
              "      <td>558.0</td>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1428627663</td>\n",
              "      <td>0.0</td>\n",
              "      <td>356</td>\n",
              "      <td>1</td>\n",
              "      <td>2973190.0</td>\n",
              "      <td>481.0</td>\n",
              "      <td>1245.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>126527060</td>\n",
              "      <td>0.0</td>\n",
              "      <td>231</td>\n",
              "      <td>1</td>\n",
              "      <td>1128571.0</td>\n",
              "      <td>112.0</td>\n",
              "      <td>290.0</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>64</th>\n",
              "      <td>8796669</td>\n",
              "      <td>0.0</td>\n",
              "      <td>756</td>\n",
              "      <td>1</td>\n",
              "      <td>39516.0</td>\n",
              "      <td>223.0</td>\n",
              "      <td>577.0</td>\n",
              "      <td>101</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>45606480</td>\n",
              "      <td>0.0</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>2381741.0</td>\n",
              "      <td>19.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>34</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>83294633</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>276</td>\n",
              "      <td>1</td>\n",
              "      <td>349390.0</td>\n",
              "      <td>238.0</td>\n",
              "      <td>617.0</td>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>240485658</td>\n",
              "      <td>0.0</td>\n",
              "      <td>586</td>\n",
              "      <td>1</td>\n",
              "      <td>770880.0</td>\n",
              "      <td>312.0</td>\n",
              "      <td>808.0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>45504560</td>\n",
              "      <td>0.0</td>\n",
              "      <td>368</td>\n",
              "      <td>1</td>\n",
              "      <td>434128.0</td>\n",
              "      <td>105.0</td>\n",
              "      <td>271.0</td>\n",
              "      <td>35</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>51784059</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>410</td>\n",
              "      <td>1</td>\n",
              "      <td>97600.0</td>\n",
              "      <td>531.0</td>\n",
              "      <td>1374.0</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>117337368</td>\n",
              "      <td>0.0</td>\n",
              "      <td>608</td>\n",
              "      <td>1</td>\n",
              "      <td>298170.0</td>\n",
              "      <td>394.0</td>\n",
              "      <td>1019.0</td>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>60414495</td>\n",
              "      <td>0.0</td>\n",
              "      <td>710</td>\n",
              "      <td>1</td>\n",
              "      <td>1213090.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>129.0</td>\n",
              "      <td>24</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>16944826</td>\n",
              "      <td>0.0</td>\n",
              "      <td>116</td>\n",
              "      <td>1</td>\n",
              "      <td>176520.0</td>\n",
              "      <td>96.0</td>\n",
              "      <td>249.0</td>\n",
              "      <td>73</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>85</th>\n",
              "      <td>2718352</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>440</td>\n",
              "      <td>1</td>\n",
              "      <td>62620.0</td>\n",
              "      <td>43.0</td>\n",
              "      <td>112.0</td>\n",
              "      <td>142</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>34308525</td>\n",
              "      <td>0.0</td>\n",
              "      <td>458</td>\n",
              "      <td>1</td>\n",
              "      <td>328550.0</td>\n",
              "      <td>104.0</td>\n",
              "      <td>270.0</td>\n",
              "      <td>46</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>67</th>\n",
              "      <td>7149077</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>688</td>\n",
              "      <td>1</td>\n",
              "      <td>87460.0</td>\n",
              "      <td>82.0</td>\n",
              "      <td>212.0</td>\n",
              "      <td>105</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>98858950</td>\n",
              "      <td>0.0</td>\n",
              "      <td>704</td>\n",
              "      <td>1</td>\n",
              "      <td>313429.0</td>\n",
              "      <td>315.0</td>\n",
              "      <td>817.0</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>68</th>\n",
              "      <td>6735347</td>\n",
              "      <td>0.0</td>\n",
              "      <td>417</td>\n",
              "      <td>1</td>\n",
              "      <td>191800.0</td>\n",
              "      <td>35.0</td>\n",
              "      <td>91.0</td>\n",
              "      <td>109</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88</th>\n",
              "      <td>1485509</td>\n",
              "      <td>0.0</td>\n",
              "      <td>48</td>\n",
              "      <td>1</td>\n",
              "      <td>785.0</td>\n",
              "      <td>1892.0</td>\n",
              "      <td>4901.0</td>\n",
              "      <td>154</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>128455567</td>\n",
              "      <td>0.0</td>\n",
              "      <td>484</td>\n",
              "      <td>1</td>\n",
              "      <td>1943950.0</td>\n",
              "      <td>66.0</td>\n",
              "      <td>171.0</td>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>34352719</td>\n",
              "      <td>0.0</td>\n",
              "      <td>604</td>\n",
              "      <td>1</td>\n",
              "      <td>1280000.0</td>\n",
              "      <td>27.0</td>\n",
              "      <td>70.0</td>\n",
              "      <td>45</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>123294513</td>\n",
              "      <td>-0.0</td>\n",
              "      <td>392</td>\n",
              "      <td>1</td>\n",
              "      <td>364500.0</td>\n",
              "      <td>338.0</td>\n",
              "      <td>876.0</td>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>23227014</td>\n",
              "      <td>0.0</td>\n",
              "      <td>760</td>\n",
              "      <td>1</td>\n",
              "      <td>183630.0</td>\n",
              "      <td>126.0</td>\n",
              "      <td>328.0</td>\n",
              "      <td>60</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>11337052</td>\n",
              "      <td>0.0</td>\n",
              "      <td>400</td>\n",
              "      <td>1</td>\n",
              "      <td>88794.0</td>\n",
              "      <td>128.0</td>\n",
              "      <td>331.0</td>\n",
              "      <td>83</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>30 rows × 190 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1e24b4a-2b9e-40b6-811d-89bd30bc2e74')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e1e24b4a-2b9e-40b6-811d-89bd30bc2e74 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e1e24b4a-2b9e-40b6-811d-89bd30bc2e74');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ecdca63b-41d0-4bbe-884c-7761ca191c6e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ecdca63b-41d0-4bbe-884c-7761ca191c6e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ecdca63b-41d0-4bbe-884c-7761ca191c6e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_3e271964-db98-4eb1-81c5-6ba13b5cdc38\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x_test')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_3e271964-db98-4eb1-81c5-6ba13b5cdc38 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('x_test');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "x_test"
            }
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_test"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jBF5YJJxPPMt",
        "outputId": "9472e671-18e9-4db8-bf28-44664418ebf1"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "80    20.0\n",
              "77    11.0\n",
              "73     6.0\n",
              "94     3.0\n",
              "33    19.0\n",
              "79    19.0\n",
              "69    25.0\n",
              "42    44.0\n",
              "0     58.0\n",
              "10    20.0\n",
              "64    11.0\n",
              "30    21.0\n",
              "18    11.0\n",
              "4     66.0\n",
              "31    40.0\n",
              "26    25.0\n",
              "12    18.0\n",
              "22    22.0\n",
              "53    21.0\n",
              "85    14.0\n",
              "40    19.0\n",
              "67    23.0\n",
              "15    34.0\n",
              "68    33.0\n",
              "88    47.0\n",
              "9     20.0\n",
              "39    23.0\n",
              "11    11.0\n",
              "45    32.0\n",
              "55    18.0\n",
              "Name: mostPollutedCountries_particlePollution, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_train"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BdAd04EaPROd",
        "outputId": "0d7d5ceb-f9f7-42b0-afba-d7c91412d3c1"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "28    10.0\n",
              "72    16.0\n",
              "70    19.0\n",
              "5     21.0\n",
              "44    17.0\n",
              "      ... \n",
              "60    15.0\n",
              "71    10.0\n",
              "14    32.0\n",
              "92    10.0\n",
              "51    20.0\n",
              "Name: mostPollutedCountries_particlePollution, Length: 66, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**linear regression**"
      ],
      "metadata": {
        "id": "4EFiGTlqqEZ9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LinearRegression\n",
        "model=LinearRegression()\n",
        "model.fit(x_train,y_train)\n",
        "y_pred=model.predict(x_test)\n",
        "y_pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "P0jN7puVZ_ah",
        "outputId": "ca2ae09a-7246-4e82-f9fe-f2f8a4f5541d"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([34.69472144, 16.64419965, 16.18384204, 10.42433316, 15.50834118,\n",
              "       17.8584479 , 19.0554696 , 35.03240504, 50.2483453 , 25.07008797,\n",
              "       13.90881991, 23.25707931, 18.14182141, 35.2331049 , 35.75686996,\n",
              "       36.38827581, 27.95734473, 20.68435896, 35.22549244, 14.02195927,\n",
              "       32.53709788, 14.05835288, 31.06656468, 32.05470129, 26.20990333,\n",
              "       18.34263787, 14.57315731, 26.85004103, 28.37905214, 33.99972837])"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score"
      ],
      "metadata": {
        "id": "buZqWU1xa8mO"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"R2 Score is :\",r2_score(y_pred,y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "q3sIYwHGaFbq",
        "outputId": "cf891cc2-8cde-4a18-a481-23b7bdbd0200"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "R2 Score is : -0.2742573606255876\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**POLYNOMIAL REGRESSION**"
      ],
      "metadata": {
        "id": "5UJyG8BGphIk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import PolynomialFeatures\n",
        "poly=PolynomialFeatures()\n",
        "x_poly=poly.fit_transform(x)\n",
        "x_poly"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UozsFCe7o7Te",
        "outputId": "09d36242-b8fc-450e-a6e3-22d6700a1f7c"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[ 1.00000000e+00,  1.42862766e+09,  0.00000000e+00, ...,\n",
              "         0.00000000e+00,  0.00000000e+00,  0.00000000e+00],\n",
              "       [ 1.00000000e+00,  1.42567135e+09, -0.00000000e+00, ...,\n",
              "         0.00000000e+00,  0.00000000e+00,  0.00000000e+00],\n",
              "       [ 1.00000000e+00,  3.39996563e+08,  0.00000000e+00, ...,\n",
              "         0.00000000e+00,  0.00000000e+00,  0.00000000e+00],\n",
              "       ...,\n",
              "       [ 1.00000000e+00,  5.35064000e+05,  0.00000000e+00, ...,\n",
              "         0.00000000e+00,  0.00000000e+00,  0.00000000e+00],\n",
              "       [ 1.00000000e+00,  4.12623000e+05,  0.00000000e+00, ...,\n",
              "         0.00000000e+00,  0.00000000e+00,  0.00000000e+00],\n",
              "       [ 1.00000000e+00,  3.75318000e+05,  0.00000000e+00, ...,\n",
              "         0.00000000e+00,  0.00000000e+00,  0.00000000e+00]])"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model1=LinearRegression()\n",
        "model1.fit(x_poly,y)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "id": "toC_F3p8pG73",
        "outputId": "55ec7f42-de50-4a06-c17b-9cf4154b41e1"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "LinearRegression()"
            ],
            "text/html": [
              "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_poly=model1.predict(x_poly)\n",
        "y_poly"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bF_Q0prOpPr6",
        "outputId": "52f6cb40-e0fa-4c27-cc49-5b573c7cb884"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([58.00009659, 39.00013562,  8.99999777, 51.99999949, 65.99999809,\n",
              "       21.00000024, 16.00000265, 82.99999199,  9.99999954, 20.00000475,\n",
              "       20.00000915, 10.99999022, 18.00001296, 17.99997219, 31.99999345,\n",
              "       34.00001568, 23.99997788, 21.00000768, 11.00002183, 23.99997842,\n",
              "       10.99999541, 11.99999739, 21.99998596, 17.00000112, 30.99999057,\n",
              "       14.99999723, 25.00001892, 29.00002729,  9.99995548, 14.99998245,\n",
              "       20.99999346, 39.99998693, 59.00000666, 19.00001794,  7.9999865 ,\n",
              "       22.00000967, 16.99997679, 15.99996525, 41.00000608, 22.99997338,\n",
              "       18.99999888, 29.99997536, 43.99996513,  8.00000059, 16.99995801,\n",
              "       32.00000883, 24.99999823, 18.0000054 , 23.00004144, 24.00001497,\n",
              "        9.00000289, 20.00000196, 11.00000174, 20.99997676, 12.99999804,\n",
              "       18.00003333,  6.99999883, 14.00000221, 22.0000101 ,  9.00001039,\n",
              "       15.00000658, 39.00001489, 21.00000928, 12.00002473, 11.00001002,\n",
              "       22.99996674, 20.00001075, 23.00001622, 32.99998482, 24.99999993,\n",
              "       18.99998113,  9.99999935, 15.99999755,  6.00002609,  7.00000254,\n",
              "        8.00001817, 10.00000449, 11.00000051, 37.99998779, 18.99998936,\n",
              "       20.00000403, 62.00000243,  9.99996821, 34.99998873, 25.9999899 ,\n",
              "       14.00000094, 31.99998117, 12.99999745, 46.99999121,  5.99999687,\n",
              "       19.99998815, 23.99999824,  9.99998867,  8.99998185,  2.99999224,\n",
              "        5.99999522])"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import r2_score\n",
        "print(r2_score(y,y_poly))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IivyACcTpR4E",
        "outputId": "02f63fd8-744b-4da2-c192-5b703e83f169"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.9999999999973689\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**RANDOM FOREST**"
      ],
      "metadata": {
        "id": "md06FMh-KrOk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.ensemble import RandomForestRegressor\n",
        "model1=RandomForestRegressor()\n",
        "model1.fit(x_train,y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "id": "rOlufE_vKR5v",
        "outputId": "95c96c7d-92dc-4165-a4f8-9ac8e8968886"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RandomForestRegressor()"
            ],
            "text/html": [
              "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred=model1.predict(x_test)\n",
        "y_pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "l50qVp02Khki",
        "outputId": "c0778442-bdda-4c8d-cb85-9886998093bd"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([26.19, 13.88,  8.44, 10.66, 14.36, 12.12, 12.71, 27.22, 35.88,\n",
              "       16.64, 11.5 , 15.49, 15.43, 34.02, 27.24, 23.43, 23.79, 14.81,\n",
              "       27.41, 10.31, 26.44, 12.45, 25.31, 24.74, 38.42, 15.96, 14.84,\n",
              "       25.45, 26.9 , 26.71])"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"R2 Score is :\",r2_score(y_pred,y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MaHlUgotLkoJ",
        "outputId": "f73e6fe1-62f6-4f75-b87d-5d258185e7aa"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "R2 Score is : -0.663134037061132\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**DECISION TREE**"
      ],
      "metadata": {
        "id": "pucONSANKwOB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.tree import DecisionTreeRegressor\n",
        "model=DecisionTreeRegressor()\n",
        "model.fit(x_train,y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "id": "LnhPzsq9LH5A",
        "outputId": "71f24d5a-5be9-4ce4-a6c2-4036267a4fe5"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DecisionTreeRegressor()"
            ],
            "text/html": [
              "<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeRegressor()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeRegressor</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeRegressor()</pre></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred=model.predict(x_test)\n",
        "y_pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iKt1esfWLWrT",
        "outputId": "d65d344a-8299-4b46-e278-bb4041316393"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([17.,  6.,  6.,  8., 11.,  6.,  7., 24., 39., 15., 10., 15., 14.,\n",
              "       52., 24., 24., 24., 15., 26.,  6., 24.,  9., 24., 24., 83., 15.,\n",
              "       15., 24., 24., 24.])"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"R2 Score is :\",r2_score(y_pred,y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "holP5xF-Lomc",
        "outputId": "4c225211-4f7c-436c-f4c7-c080e82d55c6"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "R2 Score is : 0.41910989242775787\n"
          ]
        }
      ]
    }
  ]
}